var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.405,1,0.718]],["body/components/AppComponent.html",[0,0.734,1,1.256,2,0.571,3,0.463,4,1.574,5,1.574,6,1.574,7,1.574,8,0.364,9,2.271,10,1.574,11,3.738,12,3.738,13,2.558,14,2.119,15,2.952,16,2.047,17,4.154,18,2.047,19,3.738,20,0.571,21,0.063,22,2.876,23,0.571,24,0.364,25,0.188,26,2.876,27,2.876,28,2.271,29,2.876,30,2.876,31,2.271,32,2.271,33,2.876,34,1.139,35,2.047,36,2.047,37,2.047,38,2.044,39,1.574,40,0.742,41,1.574,42,0.689,43,1.574,44,0.821,45,2.047,46,1.574,47,0.689,48,0.689,49,1.574,50,0.046,51,0.046]],["title/modules/AppModule.html",[52,0.499,53,1.377]],["body/modules/AppModule.html",[1,1.343,2,0.404,3,0.327,8,0.258,20,1,21,0.064,23,0.404,24,0.373,25,0.133,34,0.806,42,1.007,44,1.2,47,1.007,50,0.036,51,0.036,52,0.585,53,2.669,54,1.114,55,2.735,56,2.735,57,1.61,58,1.606,59,1.606,60,1.606,61,1.606,62,1.416,63,1.416,64,2.326,65,1.606,66,1.114,67,2.034,68,2.946,69,2.326,70,1.324,71,2.946,72,2.034,73,0.806,74,2.034,75,2.034,76,2.034,77,1.324,78,2.946,79,1.606,80,2.946,81,1.606,82,2.946,83,2.034,84,1.324,85,2.034,86,2.946,87,1.606,88,1.606,89,2.034,90,2.034,91,1.918,92,2.034,93,1.918,94,2.034,95,1.324,96,1.606,97,2.946,98,1.606,99,2.946,100,2.034,101,2.946,102,2.946,103,2.034,104,2.946,105,2.034,106,2.946,107,2.034,108,2.946,109,2.034,110,2.946,111,2.034,112,2.946,113,2.034,114,2.034,115,2.034,116,2.034,117,2.034,118,1.606,119,2.034]],["title/guards/AuthGuard.html",[93,1.638,120,1.169]],["body/guards/AuthGuard.html",[2,0.497,3,0.403,8,0.317,20,0.769,21,0.063,23,0.497,24,0.317,25,0.164,40,0.497,48,1.121,50,0.042,51,0.042,52,0.677,63,1.577,73,0.991,93,2.219,120,1.802,121,2.504,122,1.149,123,1.866,124,3.286,125,3.409,126,1.35,127,0.497,128,0.844,129,0.991,130,0.973,131,4.492,132,0.929,133,1.977,134,2.626,135,0.973,136,2.504,137,0.844,138,0.403,139,0.844,140,1.35,141,2.504,142,2.219,143,1.468,144,2.46,145,1.35,146,1.866,147,2.219,148,2.122,149,0.973,150,2.504,151,1.164,152,1.35,153,1.164,154,1.371,155,0.715,156,1.371,157,1.977,158,2.504,159,1.977,160,2.504,161,1.371,162,2.504]],["title/injectables/AuthService.html",[62,0.848,149,0.718]],["body/injectables/AuthService.html",[2,0.334,3,0.271,8,0.213,20,0.615,21,0.064,23,0.334,24,0.213,25,0.11,40,0.334,48,1.142,50,0.031,51,0.031,52,0.615,57,1.44,62,0.863,66,1.895,81,1.329,122,0.863,123,1.402,126,1.227,127,0.334,128,0.863,129,1.014,130,0.731,132,0.743,135,1.12,137,0.567,138,0.412,139,0.567,140,1.014,142,2.253,143,1.524,144,2.3,145,1.875,146,2.356,147,3.061,148,2.505,149,0.884,152,0.667,153,0.783,155,1.164,156,1.895,161,1.696,163,1.329,164,3.921,165,3.461,166,3.461,167,3.461,168,3.461,169,1.684,170,3.921,171,1.684,172,1.684,173,3.317,174,1.667,175,2.553,176,4.2,177,1.684,178,1.667,179,1.684,180,1.684,181,1.667,182,1.684,183,1.329,184,2.446,185,1.684,186,3.098,187,3.098,188,2.017,189,3.098,190,3.098,191,2.446,192,1.684,193,1.684,194,1.684,195,1.684,196,1.684,197,1.684]],["title/components/DashboardComponent.html",[0,0.405,42,0.603]],["body/components/DashboardComponent.html",[0,0.66,1,0.488,2,0.339,3,0.275,4,0.936,5,0.936,6,0.936,7,0.936,8,0.217,10,0.936,13,2.16,14,1.622,16,1.418,18,1.418,20,0.514,21,0.064,23,0.339,24,0.217,25,0.112,34,0.677,35,1.418,36,1.418,37,1.418,38,1.622,39,0.936,40,0.621,41,0.936,42,0.836,43,0.936,44,0.488,45,1.418,46,0.936,47,0.41,48,0.41,49,0.936,50,0.043,51,0.032,122,0.873,127,0.339,130,0.74,132,0.75,135,0.893,137,0.576,138,0.275,139,0.576,143,1.547,151,1.204,152,0.677,155,0.488,161,2.599,198,1.35,199,3.489,200,2.469,201,3.127,202,2.59,203,3.489,204,2.755,205,1.71,206,2.868,207,1.71,208,1.71,209,2.045,210,2.045,211,2.59,212,2.59,213,1.686,214,1.71,215,1.35,216,1.35,217,1.35,218,1.71,219,4.538,220,1.71,221,4.477,222,4.477,223,4.477,224,1.71,225,1.71,226,1.71,227,1.71,228,1.71,229,1.71,230,1.71,231,1.71,232,1.71,233,1.71,234,1.71,235,1.71,236,1.71,237,1.71,238,1.71,239,1.71,240,1.71,241,1.71,242,1.71,243,1.71,244,1.71,245,1.71,246,2.59,247,1.71,248,1.71,249,2.59]],["title/classes/FirebaseUserModel.html",[25,0.165,250,1.169]],["body/classes/FirebaseUserModel.html",[2,0.566,3,0.459,8,0.361,21,0.064,24,0.361,25,0.244,40,0.925,48,1.167,50,0.046,51,0.046,57,2.167,122,0.961,127,0.566,128,1.253,132,0.991,135,1.252,138,0.666,250,1.728,251,2.251,252,4.136,253,4.384,254,3.717,255,2.935,256,4.868,257,2.851,258,3.717,259,2.935,260,2.935,261,2.851,262,2.851,263,2.851,264,2.851]],["title/components/LoginComponent.html",[0,0.405,44,0.718]],["body/components/LoginComponent.html",[0,0.688,1,0.556,2,0.386,3,0.313,4,1.065,5,1.065,6,1.065,7,1.065,8,0.246,10,1.065,13,2.265,14,1.326,16,1.562,18,1.562,20,0.67,21,0.064,23,0.386,24,0.246,25,0.127,34,0.771,35,1.562,36,1.562,37,1.562,38,1.729,39,1.065,40,0.67,41,1.065,42,0.466,43,1.065,44,1.062,45,2.036,46,1.065,47,0.466,48,1.025,49,1.065,50,0.035,51,0.035,52,0.566,62,1.572,73,0.771,95,1.267,122,0.961,127,0.386,128,0.961,129,1.13,130,0.814,132,0.809,134,2.49,135,1.13,137,0.656,138,0.459,139,0.656,140,1.337,143,1.138,145,1.772,152,1.13,153,0.904,154,1.065,159,2.666,173,3.267,174,2.421,175,2.694,178,2.421,181,2.421,188,2.198,213,2.198,265,1.536,266,4.548,267,3.377,268,2.852,269,3.719,270,3.719,271,3.719,272,1.536,273,1.946,274,1.946,275,1.946,276,1.946,277,1.946,278,1.946,279,1.946,280,1.946,281,1.857,282,1.857,283,2.252]],["title/components/UserComponent.html",[0,0.405,47,0.603]],["body/components/UserComponent.html",[0,0.671,1,0.514,2,0.357,3,0.29,4,0.986,5,0.986,6,0.986,7,0.986,8,0.228,10,0.986,13,2.202,14,1.5,16,1.474,18,1.474,20,0.761,21,0.063,23,0.357,24,0.228,25,0.118,28,1.422,31,1.422,32,2.126,34,0.713,35,1.474,36,1.474,37,1.474,38,1.664,39,0.986,40,0.64,41,0.986,42,0.432,43,0.986,44,0.514,45,1.96,46,0.986,47,0.858,48,1.123,49,0.986,50,0.033,51,0.033,52,0.711,62,1.547,73,0.713,95,1.172,122,0.908,127,0.357,128,0.908,129,1.278,130,0.769,132,0.858,134,1.474,135,1.094,137,0.607,138,0.519,139,0.607,140,1.278,143,0.908,145,1.518,151,1.252,152,1.278,154,1.474,155,0.769,184,1.422,200,2.547,204,2.827,213,2.1,250,1.87,259,1.422,260,1.422,272,1.422,281,1.753,282,1.753,283,2.126,284,1.422,285,3.226,286,2.693,287,4.023,288,2.827,289,3.581,290,4.463,291,2.693,292,1.8,293,2.693,294,1.8,295,1.8,296,1.422,297,1.422,298,2.126,299,2.693,300,1.422,301,1.422,302,1.8,303,3.226,304,1.8,305,1.8,306,1.8,307,1.8,308,1.8,309,3.226,310,1.8,311,2.126,312,2.693,313,1.8,314,1.8,315,2.693,316,1.8,317,1.8,318,1.8,319,1.8,320,1.8,321,1.8,322,1.8,323,1.8,324,1.422]],["title/guards/UserResolver.html",[91,1.638,120,1.169]],["body/guards/UserResolver.html",[2,0.517,3,0.419,8,0.33,20,0.839,21,0.064,23,0.517,24,0.33,25,0.171,40,0.695,48,0.624,50,0.043,51,0.043,63,1.565,73,1.031,91,2.278,96,2.055,120,1.21,127,0.517,128,0.877,129,1.031,130,0.999,132,0.624,133,2.055,134,2.542,135,0.999,137,1.18,138,0.563,139,1.18,143,1.487,144,1.916,146,2.315,148,1.425,149,0.999,151,1.21,153,1.21,154,1.425,155,0.999,156,1.425,157,2.055,161,1.425,188,1.694,191,2.055,250,1.627,288,2.055,301,2.055,311,2.763,325,2.603,326,2.603,327,3.5,328,4.229,329,2.603,330,3.954,331,2.603,332,3.5,333,2.603,334,2.603,335,2.603,336,3.5,337,3.5,338,2.763,339,2.603,340,2.603]],["title/injectables/UserService.html",[63,0.848,149,0.718]],["body/injectables/UserService.html",[2,0.488,3,0.396,8,0.312,20,0.762,21,0.063,23,0.488,24,0.312,25,0.161,38,1.143,40,0.488,48,1.166,50,0.041,51,0.041,52,0.762,63,1.135,79,1.942,122,1.135,123,2.369,126,0.974,127,0.488,128,1.135,129,1.334,130,0.962,132,0.59,135,1.097,137,0.829,138,0.542,139,0.829,140,1.334,142,1.601,143,1.295,144,2.262,145,1.334,146,1.844,147,2.193,148,2.103,149,1.097,152,0.974,153,1.143,155,0.702,156,1.347,183,1.942,338,1.942,341,1.942,342,2.66,343,4.726,344,4.131,345,2.46,346,4.469,347,2.46,348,4.131,349,3.841,350,3.841,351,3.841,352,3.841,353,2.46,354,2.46,355,2.46,356,2.46]],["title/coverage.html",[357,2.701]],["body/coverage.html",[0,0.73,1,0.891,8,0.395,9,2.464,21,0.062,25,0.204,42,0.748,44,0.891,47,0.748,50,0.048,51,0.048,62,1.052,63,1.052,84,2.565,138,0.502,149,1.233,155,0.891,163,2.464,198,2.464,206,2.032,250,1.451,251,2.464,265,2.464,284,2.464,324,3.692,341,2.464,357,2.464,358,2.464,359,3.121,360,3.121,361,4.317,362,4.317,363,3.121,364,3.121,365,3.121,366,3.121,367,3.121,368,3.121,369,3.121,370,3.121,371,3.121,372,3.121,373,3.121,374,2.464,375,2.565,376,2.464,377,3.121,378,3.121]],["title/dependencies.html",[54,1.655,379,2.108]],["body/dependencies.html",[21,0.064,23,0.644,50,0.05,51,0.05,54,1.776,69,3.187,70,2.628,73,1.285,77,2.112,87,2.562,88,2.562,98,2.562,126,1.285,300,2.562,380,3.244,381,3.244,382,3.244,383,4.037,384,4.942,385,3.244,386,3.244,387,3.244,388,3.244,389,3.244,390,3.244,391,3.244,392,3.244,393,3.244,394,3.244,395,3.244,396,3.244,397,3.244,398,3.244,399,3.244]],["title/index.html",[127,0.418,400,1.664,401,1.664]],["body/index.html",[0,0.67,3,0.356,8,0.396,14,1.028,15,1.746,20,0.439,21,0.053,24,0.28,25,0.145,40,0.439,42,0.75,47,0.53,50,0.038,51,0.038,57,1.028,66,1.211,77,2.363,123,2.637,124,1.746,126,1.239,130,0.893,132,0.53,138,0.356,140,1.562,145,1.239,151,1.028,155,0.631,174,1.44,175,1.44,178,1.44,181,1.44,206,2.954,209,3.287,210,2.866,215,1.746,216,1.746,217,1.746,255,1.746,281,2.569,282,2.363,298,2.866,342,1.746,358,2.866,400,1.746,401,1.746,402,2.212,403,2.212,404,3.128,405,3.946,406,3.629,407,3.629,408,2.212,409,2.212,410,2.212,411,2.212,412,2.212,413,2.212,414,2.212,415,2.212,416,2.212,417,3.629,418,2.212,419,2.212,420,2.212,421,3.128,422,3.128,423,2.212,424,2.212,425,2.212,426,2.212,427,2.212,428,3.128,429,3.128,430,2.212,431,2.212,432,2.212,433,2.212,434,2.212,435,2.212,436,2.212,437,3.128,438,3.629,439,2.212,440,2.212,441,3.128,442,2.212,443,2.212,444,3.128,445,4.322,446,2.212,447,2.212,448,2.212,449,2.212,450,2.212,451,2.212,452,2.212,453,2.212,454,2.212,455,2.212,456,4.163,457,2.212,458,2.212,459,2.212,460,2.212,461,2.212,462,2.212,463,1.746,464,3.128,465,2.212,466,2.212,467,2.212,468,2.212,469,3.629,470,2.212,471,2.212,472,2.212,473,2.212,474,2.212,475,2.212,476,2.212]],["title/modules.html",[52,0.679]],["body/modules.html",[21,0.056,50,0.056,51,0.056,52,0.777,53,2.142,70,2.547,477,3.913,478,3.913,479,3.913]],["title/overview.html",[480,2.701]],["body/overview.html",[0,0.502,1,1.384,21,0.061,24,0.395,25,0.204,34,1.236,42,1.035,44,1.233,47,1.035,50,0.048,51,0.048,52,0.782,53,2.792,54,1.709,55,2.464,56,2.464,57,1.451,58,2.464,59,2.464,60,2.464,61,2.464,62,1.455,63,1.455,64,3.111,65,2.464,66,1.709,120,1.451,149,0.891,480,2.464,481,3.94,482,3.121,483,3.121,484,3.121]],["title/miscellaneous/variables.html",[375,1.968,485,1.664]],["body/miscellaneous/variables.html",[21,0.062,50,0.05,51,0.05,84,3.147,118,2.587,126,1.298,127,0.65,138,0.654,296,3.207,297,3.207,374,2.587,375,2.133,376,2.587,463,3.207,485,2.587,486,3.277,487,3.277,488,4.614,489,3.277,490,3.277,491,3.277,492,3.277,493,3.277,494,4.414,495,3.277,496,3.277,497,3.277,498,3.277,499,3.277,500,3.277,501,3.277,502,3.277,503,3.277,504,3.277]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["03:24:00",{"_index":245,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0px",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":481,"title":{},"body":{"overview.html":{}}}],["100",{"_index":324,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["17",{"_index":243,"title":{},"body":{"components/DashboardComponent.html":{}}}],["19/19",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":484,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":244,"title":{},"body":{"components/DashboardComponent.html":{}}}],["212121",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":322,"title":{},"body":{"components/UserComponent.html":{}}}],["3",{"_index":483,"title":{},"body":{"overview.html":{}}}],["3/4",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":482,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["5.0.2",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["5.5.4",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["528303106160",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":409,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["7034e",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.appspot.com",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.firebaseapp.com",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.firebaseio.com",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["_test",{"_index":203,"title":{},"body":{"components/DashboardComponent.html":{}}}],["access",{"_index":410,"title":{},"body":{"index.html":{}}}],["account",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["activatedrout",{"_index":289,"title":{},"body":{"components/UserComponent.html":{}}}],["activatedroutesnapshot",{"_index":328,"title":{},"body":{"guards/UserResolver.html":{}}}],["actual_compon",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["add",{"_index":417,"title":{},"body":{"index.html":{}}}],["afauth",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["aizasycgdmhp1rn511loqgxeseeebefawek",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":406,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":300,"title":{},"body":{"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"dependencies.html":{}}}],["angularefirestor",{"_index":349,"title":{},"body":{"injectables/UserService.html":{}}}],["angularfire2",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angularfire2/auth",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfire2/databas",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/firestor",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["angularfireauth",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfireauthmodul",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabasemodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":346,"title":{},"body":{"injectables/UserService.html":{}}}],["angularfirestoremodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":413,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["app.compon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":434,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arial",{"_index":317,"title":{},"body":{"components/UserComponent.html":{}}}],["artifact",{"_index":457,"title":{},"body":{"index.html":{}}}],["attribut",{"_index":298,"title":{},"body":{"components/UserComponent.html":{},"index.html":{}}}],["authdomain",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["authguard",{"_index":93,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["authservic",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automat",{"_index":450,"title":{},"body":{"index.html":{}}}],["avail",{"_index":427,"title":{},"body":{"index.html":{}}}],["background",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["bar",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["basic",{"_index":425,"title":{},"body":{"index.html":{}}}],["beta.18",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["black",{"_index":318,"title":{},"body":{"components/UserComponent.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":479,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":456,"title":{},"body":{"index.html":{}}}],["call",{"_index":437,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["chang",{"_index":452,"title":{},"body":{"index.html":{}}}],["chart",{"_index":249,"title":{},"body":{"components/DashboardComponent.html":{}}}],["check",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["class",{"_index":25,"title":{"classes/FirebaseUserModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":412,"title":{},"body":{"index.html":{}}}],["cli",{"_index":407,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":351,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodul",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":453,"title":{},"body":{"index.html":{}}}],["color",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["command",{"_index":443,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":432,"title":{},"body":{"index.html":{}}}],["component_templ",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["configur",{"_index":433,"title":{},"body":{"index.html":{}}}],["connect",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["consol",{"_index":212,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.error(err",{"_index":222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log('logout",{"_index":310,"title":{},"body":{"components/UserComponent.html":{}}}],["console.log('test",{"_index":219,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(err",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(r",{"_index":223,"title":{},"body":{"components/DashboardComponent.html":{}}}],["const",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["constructor(afauth",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservic",{"_index":272,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["constructor(db",{"_index":345,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(getdataservic",{"_index":205,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(priv",{"_index":217,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["constructor(publ",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(userservic",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}}}],["contribut",{"_index":476,"title":{},"body":{"index.html":{}}}],["core",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["core/auth.guard",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["core/auth.servic",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["core/user.model",{"_index":301,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["core/user.servic",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"guards/UserResolver.html":{}}}],["coverag",{"_index":357,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":255,"title":{},"body":{"classes/FirebaseUserModel.html":{},"index.html":{}}}],["current",{"_index":348,"title":{},"body":{"injectables/UserService.html":{}}}],["dashboard",{"_index":199,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["dashboard.component.css",{"_index":201,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":202,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":42,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["data",{"_index":303,"title":{},"body":{"components/UserComponent.html":{}}}],["data.servic",{"_index":216,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["data.service.t",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["databas",{"_index":342,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["databaseurl",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date('decemb",{"_index":242,"title":{},"body":{"components/DashboardComponent.html":{}}}],["date.now",{"_index":246,"title":{},"body":{"components/DashboardComponent.html":{}}}],["db",{"_index":343,"title":{},"body":{"injectables/UserService.html":{}}}],["declar",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":296,"title":{},"body":{"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["depend",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["dev",{"_index":447,"title":{},"body":{"index.html":{}}}],["develop",{"_index":429,"title":{},"body":{"index.html":{}}}],["differ",{"_index":442,"title":{},"body":{"index.html":{}}}],["direct",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":455,"title":{},"body":{"index.html":{}}}],["directori",{"_index":460,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":293,"title":{},"body":{"components/UserComponent.html":{}}}],["dist",{"_index":459,"title":{},"body":{"index.html":{}}}],["docteur",{"_index":312,"title":{},"body":{"components/UserComponent.html":{}}}],["document",{"_index":358,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dofacebooklogin",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["dogooglelogin",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologout",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["dotwitterlogin",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynam",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["easili",{"_index":414,"title":{},"body":{"index.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["encapsul",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["environ",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"guards/UserResolver.html":{}}}],["error",{"_index":309,"title":{},"body":{"components/UserComponent.html":{}}}],["exampl",{"_index":438,"title":{},"body":{"index.html":{}}}],["execut",{"_index":465,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":475,"title":{},"body":{"index.html":{}}}],["facebook",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["fals",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":316,"title":{},"body":{"components/UserComponent.html":{}}}],["feel",{"_index":472,"title":{},"body":{"index.html":{}}}],["ffffff",{"_index":313,"title":{},"body":{"components/UserComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["firebas",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth().currentus",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth().onauthstatechanged(funct",{"_index":355,"title":{},"body":{"injectables/UserService.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/app",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["firebaseusermodel",{"_index":250,"title":{"classes/FirebaseUserModel.html":{}},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"coverage.html":{}}}],["firestor",{"_index":352,"title":{},"body":{"injectables/UserService.html":{}}}],["flag",{"_index":462,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["folder",{"_index":428,"title":{},"body":{"index.html":{}}}],["font",{"_index":315,"title":{},"body":{"components/UserComponent.html":{}}}],["free",{"_index":473,"title":{},"body":{"index.html":{}}}],["further",{"_index":468,"title":{},"body":{"index.html":{}}}],["gener",{"_index":405,"title":{},"body":{"index.html":{}}}],["get",{"_index":400,"title":{"index.html":{}},"body":{"index.html":{}}}],["getaveragegend",{"_index":225,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getcurrentus",{"_index":344,"title":{},"body":{"injectables/UserService.html":{}}}],["getdataservic",{"_index":206,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["getdiagnosticsofazon",{"_index":241,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getmostdiagnosticsus",{"_index":233,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getmostpostsus",{"_index":231,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getmostupvot",{"_index":235,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpostbyid",{"_index":229,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpostsofaus",{"_index":248,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getresponseofadiag",{"_index":239,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getuserbyid",{"_index":227,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getzonebydocid",{"_index":237,"title":{},"body":{"components/DashboardComponent.html":{}}}],["go",{"_index":470,"title":{},"body":{"index.html":{}}}],["googl",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["guard",{"_index":120,"title":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{},"overview.html":{}}}],["guid",{"_index":430,"title":{},"body":{"index.html":{}}}],["height",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":469,"title":{},"body":{"index.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["http://dsi",{"_index":333,"title":{},"body":{"guards/UserResolver.html":{}}}],["http://localhost:4200",{"_index":449,"title":{},"body":{"index.html":{}}}],["https://loginang",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'v",{"_index":424,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":253,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["implement",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"index.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["index",{"_index":127,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":421,"title":{},"body":{"index.html":{}}}],["inject",{"_index":149,"title":{"injectables/AuthService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["it'",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["js",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":467,"title":{},"body":{"index.html":{}}}],["kimi",{"_index":281,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["layout",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["librari",{"_index":403,"title":{},"body":{"index.html":{}}}],["link",{"_index":420,"title":{},"body":{"index.html":{}}}],["locat",{"_index":290,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["login",{"_index":266,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login.component.html",{"_index":268,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.scss",{"_index":267,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["loginang",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":44,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":287,"title":{},"body":{"components/UserComponent.html":{}}}],["margin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["messagingsenderid",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["method",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["miscellan",{"_index":485,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":252,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["modifi",{"_index":435,"title":{},"body":{"index.html":{}}}],["modul",{"_index":52,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"modules.html":{},"overview.html":{}}}],["modular",{"_index":416,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":282,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["monitoring\\src\\environments\\environment.t",{"_index":436,"title":{},"body":{"index.html":{}}}],["more",{"_index":441,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navig",{"_index":448,"title":{},"body":{"index.html":{}}}],["new",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":445,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":204,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserComponent.html":{}}}],["object",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offici",{"_index":402,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":200,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserComponent.html":{}}}],["option",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["order",{"_index":422,"title":{},"body":{"index.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":480,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":379,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["panel",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["param",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["password",{"_index":331,"title":{},"body":{"guards/UserResolver.html":{}}}],["pic",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pictur",{"_index":260,"title":{},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{}}}],["power",{"_index":411,"title":{},"body":{"index.html":{}}}],["print",{"_index":211,"title":{},"body":{"components/DashboardComponent.html":{}}}],["privat",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["prod",{"_index":461,"title":{},"body":{"index.html":{}}}],["product",{"_index":463,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":259,"title":{},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{}}}],["project",{"_index":404,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["promise((resolv",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["properti",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["provid",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/FirebaseUserModel.html":{},"index.html":{},"overview.html":{}}}],["provider.addscope('email",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["provider.addscope('profil",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["queri",{"_index":350,"title":{},"body":{"injectables/UserService.html":{}}}],["quick",{"_index":419,"title":{},"body":{"index.html":{}}}],["re",{"_index":221,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reactiveformsmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":471,"title":{},"body":{"index.html":{}}}],["reject",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["reject('no",{"_index":356,"title":{},"body":{"injectables/UserService.html":{}}}],["reject(err",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"guards/UserResolver.html":{}}}],["reload",{"_index":451,"title":{},"body":{"index.html":{}}}],["repres",{"_index":299,"title":{},"body":{"components/UserComponent.html":{}}}],["reprsent",{"_index":258,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["res.displaynam",{"_index":336,"title":{},"body":{"guards/UserResolver.html":{}}}],["res.photourl",{"_index":339,"title":{},"body":{"guards/UserResolver.html":{}}}],["res.providerdata[0].providerid",{"_index":330,"title":{},"body":{"guards/UserResolver.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["resolve(fals",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(r",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(rout",{"_index":327,"title":{},"body":{"guards/UserResolver.html":{}}}],["resolve(tru",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(us",{"_index":338,"title":{},"body":{"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["result",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["reus",{"_index":474,"title":{},"body":{"index.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["root'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["rootrouterconfig",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["rout",{"_index":288,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["routedata['data",{"_index":304,"title":{},"body":{"components/UserComponent.html":{}}}],["router",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["routermodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(rootrouterconfig",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":209,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["rxj",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["san",{"_index":319,"title":{},"body":{"components/UserComponent.html":{}}}],["scaffold",{"_index":454,"title":{},"body":{"index.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["serif",{"_index":320,"title":{},"body":{"components/UserComponent.html":{}}}],["serv",{"_index":446,"title":{},"body":{"index.html":{}}}],["server",{"_index":444,"title":{},"body":{"index.html":{}}}],["servic",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["services/get",{"_index":215,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["set",{"_index":283,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["signinwithpopup(provid",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["size",{"_index":321,"title":{},"body":{"components/UserComponent.html":{}}}],["somefunct",{"_index":439,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spinner",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.t",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app",{"_index":431,"title":{},"body":{"index.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/auth.guard.t",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.guard.ts:24",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.guard.ts:9",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.service.t",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/auth.service.ts:15",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:22",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:40",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:59",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:79",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:9",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/user.model.t",{"_index":251,"title":{},"body":{"classes/FirebaseUserModel.html":{},"coverage.html":{}}}],["src/app/core/user.model.ts:13",{"_index":261,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.model.ts:18",{"_index":254,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.model.ts:8",{"_index":257,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.service.t",{"_index":341,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:15",{"_index":354,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:22",{"_index":353,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:9",{"_index":347,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/login/login.component.t",{"_index":265,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":273,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":277,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":274,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":276,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":275,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/get",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["src/app/user/dashboard/dashboard.component.t",{"_index":198,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:12",{"_index":207,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:21",{"_index":214,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:28",{"_index":208,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/user.component.t",{"_index":284,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts:21",{"_index":291,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:30",{"_index":295,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:36",{"_index":294,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:49",{"_index":292,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.resolver.t",{"_index":325,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/app/user/user.resolver.ts:12",{"_index":329,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/app/user/user.resolver.ts:7",{"_index":326,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/environments/environment.prod.t",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":401,"title":{"index.html":{}},"body":{"index.html":{}}}],["statement",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":458,"title":{},"body":{"index.html":{}}}],["string",{"_index":256,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["successfulli",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":477,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":478,"title":{},"body":{"modules.html":{}}}],["system",{"_index":426,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["test",{"_index":210,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["then((r",{"_index":307,"title":{},"body":{"components/UserComponent.html":{}}}],["then(r",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{}}}],["then(us",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._test",{"_index":218,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.afauth.auth",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.dofacebooklogin",{"_index":278,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dogooglelogin",{"_index":280,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dologout",{"_index":306,"title":{},"body":{"components/UserComponent.html":{}}}],["this.authservice.dotwitterlogin",{"_index":279,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getdataservice.getaverageage((err",{"_index":220,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getaveragegender((err",{"_index":224,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getdiagnosticsofazone('5e6lc4iv7z1lsqua6o0u",{"_index":240,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostdiagnosticsusers((err",{"_index":232,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostpostsusers((err",{"_index":230,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostupvotes((err",{"_index":234,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getpostbyid('3erbnah2xzu8b3ji2si8",{"_index":228,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getpostsofauser('dhaxx2isz3fbxes0vl9jszmxgy32",{"_index":247,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getresponseofadiag('et52rt5p5euc2xidvyov",{"_index":238,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getuserbyid('dhaxx2isz3fbxes0vl9jszmxgy32",{"_index":226,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getzonebydocid('5e6lc4iv7z1lsqua6o0u",{"_index":236,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.somemethod",{"_index":440,"title":{},"body":{"index.html":{}}}],["this.imag",{"_index":262,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.location.back",{"_index":308,"title":{},"body":{"components/UserComponent.html":{}}}],["this.nam",{"_index":263,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.provid",{"_index":264,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.route.data.subscribe(routedata",{"_index":302,"title":{},"body":{"components/UserComponent.html":{}}}],["this.router.navigate(['/login",{"_index":340,"title":{},"body":{"guards/UserResolver.html":{}}}],["this.router.navigate(['/us",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.us",{"_index":305,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getcurrentus",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}}}],["transpar",{"_index":314,"title":{},"body":{"components/UserComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["tri",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tryfacebooklogin",{"_index":269,"title":{},"body":{"components/LoginComponent.html":{}}}],["trygooglelogin",{"_index":270,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytwitterlogin",{"_index":271,"title":{},"body":{"components/LoginComponent.html":{}}}],["twitter",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["type",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":415,"title":{},"body":{"index.html":{}}}],["unit",{"_index":464,"title":{},"body":{"index.html":{}}}],["us",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["usehash",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.component.html",{"_index":286,"title":{},"body":{"components/UserComponent.html":{}}}],["user.imag",{"_index":332,"title":{},"body":{"guards/UserResolver.html":{}}}],["user.nam",{"_index":311,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["user.provid",{"_index":337,"title":{},"body":{"guards/UserResolver.html":{}}}],["user.scss",{"_index":285,"title":{},"body":{"components/UserComponent.html":{}}}],["user.servic",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["user/dashboard/dashboard.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.compon",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.resolv",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["usercompon",{"_index":47,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["userresolv",{"_index":91,"title":{"guards/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/UserResolver.html":{}}}],["userservic",{"_index":63,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["valu",{"_index":297,"title":{},"body":{"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["variabl",{"_index":375,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vd.github.io/patternlab",{"_index":334,"title":{},"body":{"guards/UserResolver.html":{}}}],["vd/images/fpo_avatar.png",{"_index":335,"title":{},"body":{"guards/UserResolver.html":{}}}],["version",{"_index":408,"title":{},"body":{"index.html":{}}}],["via",{"_index":466,"title":{},"body":{"index.html":{}}}],["viewencapsul",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.non",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":213,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["want",{"_index":418,"title":{},"body":{"index.html":{}}}],["width",{"_index":323,"title":{},"body":{"components/UserComponent.html":{}}}],["yourself",{"_index":423,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                * {\n  margin: 0px;\n}\n.app-panel{\n  height: 100vh;\n  background-color: #212121;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                UserComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { rootRouterConfig } from './app.routes';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from '../environments/environment';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { UserResolver } from './user/user.resolver';\nimport { AuthGuard } from './core/auth.guard';\nimport { AuthService } from './core/auth.service';\nimport { UserService } from './core/user.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './user/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(rootRouterConfig, { useHash: false }),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n  ],\n  providers: [AuthService, UserService, UserResolver, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard use to check if the user is connected to Firebase\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The user service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.guard.ts:24\n                            \n                        \n\n\n                \n                    \n                            Check if the user is logged in\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    a promise if the user is authenticated the promise is resolved else it's rejected\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {UserService} from './user.service';\n\n/**\n * Guard use to check if the user is connected to Firebase\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * constructor\n   * @param userService The user service\n   * @param router The router module\n   */\n  constructor(public userService: UserService,\n              private router: Router) {\n  }\n\n  /**\n   * Check if the user is logged in\n   * @return a promise if the user is authenticated the promise is resolved else it's rejected\n   */\n  canActivate(): Promise {\n    return new Promise((resolve, reject) => {\n      this.userService.getCurrentUser()\n        .then(user => {\n          this.router.navigate(['/user']);\n          return resolve(false);\n        }, err => {\n          return resolve(true);\n        });\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service use to authenticate a user to Firebase\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFacebookLogin\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                doLogout\n                            \n                            \n                                doTwitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The authentication module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doFacebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoFacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Facebook account\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully authenticated it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Google account\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully authenticated it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Try to log out the user\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully logged out it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doTwitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoTwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Twitter account\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully authenticated it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                        The authentication module\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\n\n/**\n * Service use to authenticate a user to Firebase\n */\n@Injectable()\nexport class AuthService {\n\n  /**\n   * constructor\n   * @param afAuth The authentication module\n   */\n  constructor(public afAuth: AngularFireAuth) {\n  }\n\n  /**\n   * Try to authenticate the user with a Facebook account\n   * @return a promise if the user successfully authenticated it's resolved, if not it's rejected\n   */\n  doFacebookLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.FacebookAuthProvider();\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Try to authenticate the user with a Twitter account\n   * @return a promise if the user successfully authenticated it's resolved, if not it's rejected\n   */\n  doTwitterLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.TwitterAuthProvider();\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n\n  /**\n   * Try to authenticate the user with a Google account\n   * @return a promise if the user successfully authenticated it's resolved, if not it's rejected\n   */\n  doGoogleLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Try to log out the user\n   * @return a promise if the user successfully logged out it's resolved, if not it's rejected\n   */\n  doLogout() {\n    return new Promise((resolve, reject) => {\n      if (firebase.auth().currentUser) {\n        this.afAuth.auth.signOut();\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        The dashboard component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _test\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getDataService: GetDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/dashboard/dashboard.component.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        getDataService\n                                                  \n                                                        \n                                                                    GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the GetDataService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _test\n                            \n                            \n                        \n                    \n                \n                \n                    \n_test()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/dashboard/dashboard.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Run tests and print the result on the console\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/dashboard/dashboard.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GetDataService} from '../../services/get-data.service';\n\n/**\n * The dashboard component\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  /**\n   * constructor\n   * @param getDataService the GetDataService\n   */\n  constructor(private getDataService: GetDataService) {\n  }\n\n  ngOnInit() {\n    this._test();\n  }\n\n  /**\n   * Run tests and print the result on the console\n   */\n  _test() {\n    console.log('Tests :');\n    this.getDataService.getAverageAge((err, res) => {\n      console.log('Test getDataService ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getAverageGender((err, res) => {\n      console.log('Test getAverageGender ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getUserById('dhaXX2isz3fbXES0Vl9JszmXGY32', (err, res) => {\n      console.log('Test getUserById ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getPostById('3ERbnaH2XzU8B3JI2si8', (err, res) => {\n      console.log('Test getPostById ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostPostsUsers((err, res) => {\n      console.log('Test getMostPostsUsers ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostDiagnosticsUsers((err, res) => {\n      console.log('Test getMostDiagnosticsUsers ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostUpvotes((err, res) => {\n      console.log('Test getMostUpvotes ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getZoneByDocId('5E6lc4iv7Z1LSQuA6O0u', (err, res) => {\n      console.log('Test getZoneByDocId ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getResponseOfADiag('Et52rT5p5eUC2xidvYoV', (err, res) => {\n      console.log('Test getResponseOfADiag ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getDiagnosticsOfAZone('5E6lc4iv7Z1LSQuA6O0u', (err, res) => {\n      console.log('Test getDiagnosticsOfAZone ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    }, +new Date('December 17, 2018 03:24:00'), Date.now());\n    this.getDataService.getPostsOfAUser('dhaXX2isz3fbXES0Vl9JszmXGY32', (err, res) => {\n      console.log('Test getPostsOfAUser ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    }, Date.now());\n  }\n\n}\n\n    \n\n    \n        Charts\n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Charts  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseUserModel.html":{"url":"classes/FirebaseUserModel.html","title":"class - FirebaseUserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseUserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.model.ts\n        \n\n            \n                Description\n            \n            \n                A user model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.model.ts:18\n                            \n                        \n\n                \n                    \n                            Create a user model\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        image:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:8\n                            \n                        \n\n                \n                    \n                        Reprsent the profile picture of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:13\n                            \n                        \n\n                \n                    \n                        The name of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        provider:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:18\n                            \n                        \n\n                \n                    \n                        The provider of the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FirebaseUserModel {\n  /**\n   * Reprsent the profile picture of the user\n   */\n  image: string;\n\n  /**\n   * The name of the user\n   */\n  name: string;\n\n  /**\n   * The provider of the user\n   */\n  provider: string;\n\n  /**\n   * Create a user model\n   */\n  constructor() {\n    this.image = '';\n    this.name = '';\n    this.provider = '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        The login component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login\n            \n\n            \n                styleUrls\n                login.scss\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tryFacebookLogin\n                            \n                            \n                                tryGoogleLogin\n                            \n                            \n                                tryTwitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Authentication service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryFacebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryFacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Facebook account\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Google account\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryTwitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryTwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Twitter account\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The Authentication service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AuthService} from '../core/auth.service';\nimport {Router} from '@angular/router';\n\n/**\n * The login component\n */\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.scss']\n})\nexport class LoginComponent {\n\n  /**\n   * constructor\n   * @param authService The Authentication service\n   * @param router The router module\n   */\n  constructor(public authService: AuthService,\n              private router: Router) {\n  }\n\n  /**\n   * Try to authenticate the user with a Facebook account\n   */\n  tryFacebookLogin() {\n    this.authService.doFacebookLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  /**\n   * Try to authenticate the user with a Twitter account\n   */\n  tryTwitterLogin() {\n    this.authService.doTwitterLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  /**\n   * Try to authenticate the user with a Google account\n   */\n  tryGoogleLogin() {\n    this.authService.doGoogleLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Kimi Monitoring\n          \n        \n        \n          \n            \n              settings\n            \n          \n        \n      \n    \n  \n  \n    \n      Login with Facebook\n    \n    \n      Login with Google\n    \n    \n      Login with Twitter\n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    login.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Kimi Monitoring                                                              settings                                                      Login with Facebook              Login with Google              Login with Twitter      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user.component.ts\n\n\n    \n        Description\n    \n    \n        The User component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-user\n            \n\n            \n                styleUrls\n                user.scss\n            \n\n\n\n            \n                templateUrl\n                user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The authentication service\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Router module\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Location module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Disconnected the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:30\n                            \n                        \n\n                \n                    \n                        The authentication service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FirebaseUserModel\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseUserModel\n\n                        \n                    \n                    \n                        \n                            Default value : new FirebaseUserModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n                \n                    \n                        This attribute represent the authenticated user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../core/auth.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {FirebaseUserModel} from '../core/user.model';\n\n/**\n * The User component\n */\n@Component({\n  selector: 'page-user',\n  templateUrl: 'user.component.html',\n  styleUrls: ['user.scss']\n})\n\nexport class UserComponent implements OnInit {\n\n  /**\n   * This attribute represent the authenticated user\n   */\n  user: FirebaseUserModel = new FirebaseUserModel();\n\n  /**\n   * constructor\n   * @param authService The authentication service\n   * @param route The Router module\n   * @param location The Location module\n   */\n  constructor(\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private location: Location) {\n\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      const data = routeData['data'];\n      if (data) {\n        this.user = data;\n      }\n    });\n  }\n\n\n  /**\n   * Disconnected the user\n   */\n  logout() {\n    this.authService.doLogout()\n      .then((res) => {\n        this.location.back();\n      }, (error) => {\n        console.log('Logout error', error);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Kimi Monitoring\n            \n          \n          \n            \n              Logout\n            \n            \n              \n                settings\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              \n                \n                  {{user.name}}\n                \n                \n                  Docteur\n                \n              \n            \n          \n        \n      \n      \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    user.scss\n                \n                .app-user-panel{\n  color: #ffffff ;\n  background-color: transparent;\n  font-family: \"Arial Black\", sans-serif;\n  font-size: 2em;\n}\n\n.profile-picture{\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Kimi Monitoring                                                          Logout                                                      settings                                                                                                                                                            {{user.name}}                                                  Docteur                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserResolver.html":{"url":"guards/UserResolver.html","title":"guard - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/user/user.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.resolver.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {Resolve, ActivatedRouteSnapshot, Router} from '@angular/router';\nimport {UserService} from '../core/user.service';\nimport {FirebaseUserModel} from '../core/user.model';\n\n@Injectable()\nexport class UserResolver implements Resolve {\n\n  constructor(public userService: UserService, private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Promise {\n\n    let user = new FirebaseUserModel();\n\n    return new Promise((resolve, reject) => {\n      this.userService.getCurrentUser()\n        .then(res => {\n          if (res.providerData[0].providerId == 'password') {\n            user.image = 'http://dsi-vd.github.io/patternlab-vd/images/fpo_avatar.png';\n            user.name = res.displayName;\n            user.provider = res.providerData[0].providerId;\n            return resolve(user);\n          } else {\n            user.image = res.photoURL;\n            user.name = res.displayName;\n            user.provider = res.providerData[0].providerId;\n            return resolve(user);\n          }\n        }, err => {\n          this.router.navigate(['/login']);\n          return reject(err);\n        });\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service use to get a user from the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            Get the current user\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngulareFirestore module used for querying the cloud firestore DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/user.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the current user\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user is authenticated the promise is resolved else it's rejected\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        db:     AngularFirestore\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:15\n                            \n                        \n\n                \n                    \n                        AngulareFirestore module used for querying the cloud firestore DB\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFirestore} from 'angularfire2/firestore';\nimport * as firebase from 'firebase/app';\n\n/**\n * Service use to get a user from the database\n */\n@Injectable()\nexport class UserService {\n\n  /**\n   * Get the current user\n   * @param db AngulareFirestore module used for querying the cloud firestore DB\n   */\n  constructor(public db: AngularFirestore) {\n  }\n\n  /**\n   * Get the current user\n   * @return a promise if the user is authenticated the promise is resolved else it's rejected\n   */\n  getCurrentUser() {\n    return new Promise((resolve, reject) => {\n      var user = firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          resolve(user);\n        } else {\n          reject('No user logged in');\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/user.model.ts\n            \n            \n                class\n            \n            \n                FirebaseUserModel\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/get-data.service.ts\n            \n            \n                injectable\n            \n            \n                GetDataService\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/user/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/user/user.component.ts\n            \n            \n                component\n            \n            \n                UserComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/flex-layout : ^6.0.0-beta.18\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            angularfire2 : ^5.0.2\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.5.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Kimi Monitoring\n  The official library for Kimi Monitoring\n\n\n\nThis project was generated with Angular CLI version 6.2.5.\nWhat is Kimi Monitoring?\n\nAccess to Firebase - Use the power of AngularFire2.\nClean API - Easily understandable.\nModular - Just add the service you want to use.\n\nQuick links\nAbout angularFire2 - Get information about angularFire2\nUseful information\nIn order to use the service you have to authenticate yourself.\nI've implemented a basic authentication system.\nYou can use your Google, Facebook or Twitter account to do so.\nDocumentation\nThe documentation is available in the documentation/ folder\nDeveloper Guide\nGetting started\nCreate a component in the src/app/ folder.\nThe GetDataService is provided in root. In order to\nuse it, just add an attribute with the type GetDataService to your component's constructor.\nTo configure this application for your Firebase database. You can\nmodify the Kimi-Monitoring\\src\\environments\\environment.ts file.\nTo use the service call a method on the getDataService attribute.\nExample:\nimport {GetDataService} from '../../services/get-data.service';\n\nexport class DashboardComponent {\n  //Add an attribute (getDataService) to your component\n  constructor(private getDataService: GetDataService) {}\n\n  someFunction(){\n    //Call a getDataService method\n    this.getDataService.someMethod();\n  }\n}More Example : The DashBoardComponent and the UserComponent are example on how to use the different services.\nUseful command\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nFeel free to use, reuse, extend, and contribute\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCGDmHp1RN511loQgxeSeeeBeFaWek-pIc',\n    authDomain: 'loginang-7034e.firebaseapp.com',\n    databaseURL: 'https://loginang-7034e.firebaseio.com',\n    projectId: 'loginang-7034e',\n    storageBucket: 'loginang-7034e.appspot.com',\n    messagingSenderId: '528303106160'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
