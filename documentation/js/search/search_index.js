var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.518,1,0.831]],["body/components/AppComponent.html",[0,0.946,1,1.463,2,0.501,3,0.409,4,1.725,5,1.725,6,1.725,7,1.725,8,0.324,9,2.428,10,1.725,11,3.937,12,3.937,13,2.781,14,2.336,15,2.623,16,2.234,17,4.367,18,2.234,19,3.937,20,0.601,21,0.056,22,3.04,23,0.601,24,0.409,25,0.169,26,3.04,27,3.04,28,2.428,29,3.04,30,3.04,31,2.428,32,2.428,33,3.04,34,1.284,35,2.234,36,1.922,37,2.234,38,2.255,39,1.725,40,0.779,41,1.725,42,0.963,43,1.725,44,0.963,45,2.234,46,1.725,47,0.963,48,0.963,49,1.725,50,0.041,51,0.041]],["title/modules/AppModule.html",[52,1.107,53,1.487]],["body/modules/AppModule.html",[1,1.564,2,0.357,3,0.292,8,0.231,20,1.044,21,0.057,23,0.428,24,0.42,25,0.12,34,0.915,42,1.401,44,1.401,47,1.401,50,0.033,51,0.033,52,1.319,53,2.9,54,1.229,55,2.924,56,2.924,57,2.076,58,1.731,59,1.731,60,1.731,61,1.731,62,1.619,63,1.401,64,2.494,65,1.731,66,1.443,67,2.166,68,3.122,69,2.494,70,1.229,71,3.122,72,2.166,73,0.915,74,2.166,75,2.166,76,2.166,77,1.731,78,3.122,79,1.731,80,3.122,81,1.229,82,3.122,83,2.166,84,1.443,85,2.166,86,3.122,87,1.731,88,1.731,89,2.166,90,2.166,91,2.08,92,2.166,93,2.08,94,2.166,95,1.443,96,1.443,97,3.122,98,1.229,99,3.122,100,2.166,101,3.122,102,3.122,103,2.166,104,3.122,105,2.166,106,3.122,107,2.166,108,3.122,109,2.166,110,3.122,111,2.166,112,3.122,113,2.166,114,2.166,115,2.166,116,2.166,117,2.166,118,1.731,119,2.166]],["title/classes/AppPage.html",[25,0.146,120,1.747]],["body/classes/AppPage.html",[2,0.586,3,0.478,8,0.378,15,2.369,20,0.703,21,0.056,24,0.478,25,0.241,36,1.736,50,0.046,51,0.046,70,2.017,120,2.895,121,2.84,122,0.586,123,1.186,124,4.888,125,4.888,126,1.015,127,3.555,128,1.334,129,3.555,130,3.555,131,3.555,132,3.555,133,3.555]],["title/guards/AuthGuard.html",[93,1.747,134,1.28]],["body/guards/AuthGuard.html",[2,0.512,3,0.417,8,0.33,20,0.92,21,0.056,23,0.613,24,0.417,25,0.172,40,0.613,50,0.042,51,0.042,63,1.588,73,1.31,81,1.76,93,2.658,122,0.512,123,1.089,126,0.932,128,1.271,134,1.514,135,3.102,136,0.983,137,1.31,138,4.928,139,0.847,140,2.067,141,3.34,142,3.102,143,0.983,144,0.613,145,0.983,146,3.102,147,3.186,148,0.932,149,2.067,150,3.102,151,1.76,152,1.514,153,1.514,154,0.983,155,1.76,156,1.76,157,2.478,158,3.102,159,2.478,160,3.102,161,1.31,162,3.102]],["title/injectables/AuthService.html",[62,0.96,148,0.612]],["body/injectables/AuthService.html",[2,0.375,3,0.306,8,0.242,20,0.743,21,0.057,23,0.449,24,0.306,25,0.126,40,0.639,50,0.034,51,0.034,57,2.132,62,1.183,81,1.289,122,0.375,123,0.882,126,1.08,128,1.331,136,1.023,137,1.365,139,0.62,143,1.023,144,0.639,145,1.023,148,0.878,149,2.994,152,1.109,154,1.497,155,2.453,156,2.549,161,1.729,163,1.815,164,4.324,165,4.093,166,4.093,167,3.23,168,4.093,169,4.093,170,2.272,171,2.272,172,2.272,173,2.272,174,3.23,175,2.272,176,1.109,177,2.272,178,2.272,179,2.272,180,1.289,181,1.815,182,2.272,183,3.759,184,3.759,185,2.727,186,4.093,187,3.002,188,3.27,189,2.272,190,2.272,191,2.272,192,2.272,193,2.272,194,2.272,195,2.272,196,2.272,197,1.815]],["title/components/DashboardComponent.html",[0,0.518,42,0.831]],["body/components/DashboardComponent.html",[0,0.836,1,0.678,2,0.353,3,0.288,4,1.214,5,1.214,6,1.214,7,1.214,8,0.228,10,1.214,13,2.499,14,1.945,16,1.756,18,1.756,20,0.612,21,0.057,23,0.423,24,0.288,25,0.119,34,0.904,35,1.756,36,1.511,37,1.756,38,1.945,39,1.214,40,0.719,41,1.214,42,1.262,43,1.214,44,0.678,45,1.756,46,1.214,47,0.678,48,0.678,49,1.214,50,0.033,51,0.033,122,0.353,123,0.845,126,0.849,128,1.294,136,0.981,139,0.584,143,0.678,144,0.612,145,0.678,151,1.756,161,2.033,198,1.71,199,2.904,200,3.095,201,3.635,202,3.095,203,3.182,204,3.182,205,2.14,206,2.576,207,2.14,208,2.14,209,1.214,210,2.062,211,2.14,212,2.14,213,2.14,214,1.71,215,4.65,216,2.14,217,3.715,218,4.65,219,4.541,220,2.14,221,1.71,222,2.14,223,1.71,224,2.14,225,1.71,226,2.14,227,1.71,228,2.14,229,1.71,230,2.14,231,1.71,232,2.14,233,1.71,234,3.095]],["title/classes/FirebaseUserModel.html",[25,0.146,235,1.28]],["body/classes/FirebaseUserModel.html",[2,0.541,3,0.442,8,0.349,21,0.057,24,0.442,25,0.23,40,0.94,48,1.31,50,0.043,51,0.043,57,2.696,122,0.541,126,1.11,136,1.31,139,1.236,144,0.895,203,3.796,210,2.94,233,2.622,235,2.019,236,2.622,237,4.135,238,3.303,239,3.282,240,3.282,241,3.282,242,3.282]],["title/injectables/GetDataService.html",[148,0.612,206,1.487]],["body/injectables/GetDataService.html",[2,0.167,3,0.136,8,0.108,15,0.674,20,0.441,21,0.057,23,0.2,24,0.136,25,0.056,40,0.735,48,1.254,50,0.018,51,0.018,52,1.108,122,0.167,123,0.468,126,0.868,128,1.244,139,0.608,143,1.456,144,0.519,145,1.178,148,0.52,153,1.28,154,0.543,161,1.508,176,2.38,206,1.488,209,1.925,210,2.182,214,0.808,217,0.808,221,1.369,223,1.369,225,1.369,227,1.369,229,1.369,231,1.369,238,1.369,243,3.073,244,0.808,245,3.847,246,2.545,247,1.713,248,1.713,249,1.713,250,1.713,251,1.012,252,2.095,253,2.622,254,3.186,255,1.012,256,2.228,257,1.713,258,3.569,259,1.713,260,1.713,261,2.095,262,1.713,263,1.713,264,1.713,265,4.596,266,1.012,267,2.622,268,3.569,269,1.713,270,1.713,271,3.186,272,2.095,273,2.622,274,1.713,275,1.012,276,4.057,277,1.713,278,1.713,279,4.894,280,4.057,281,3.241,282,4.057,283,1.713,284,1.012,285,2.095,286,1.369,287,3.186,288,2.228,289,2.228,290,1.713,291,1.713,292,1.713,293,1.713,294,1.012,295,1.713,296,1.713,297,1.713,298,1.012,299,3.394,300,1.713,301,1.012,302,2.622,303,2.622,304,2.622,305,1.713,306,1.713,307,4.512,308,2.545,309,1.713,310,1.713,311,1.012,312,1.713,313,1.012,314,1.012,315,1.012,316,1.012,317,3.311,318,1.713,319,2.622,320,2.095,321,2.228,322,2.711,323,2.933,324,2.622,325,1.713,326,1.012,327,3.569,328,3.569,329,2.228,330,2.228,331,2.228,332,1.012,333,1.012,334,1.012,335,1.012,336,1.713,337,1.012,338,1.012,339,1.012,340,1.012,341,1.012,342,1.713,343,1.713,344,1.012,345,1.012,346,1.012,347,1.713,348,1.012,349,1.012,350,1.012,351,3.569,352,1.713,353,1.012,354,1.012,355,1.012,356,1.713,357,1.012]],["title/components/LoginComponent.html",[0,0.518,44,0.831]],["body/components/LoginComponent.html",[0,0.81,1,0.628,2,0.327,3,0.267,4,1.124,5,1.124,6,1.124,7,1.124,8,0.211,10,1.124,13,2.432,14,1.429,16,1.66,18,1.66,20,0.759,21,0.057,23,0.392,24,0.267,25,0.11,34,0.837,35,1.66,36,1.429,37,1.66,38,1.875,39,1.124,40,0.759,41,1.124,42,0.628,43,1.124,44,1.217,45,2.179,46,1.124,47,0.628,48,0.628,49,1.124,50,0.031,51,0.031,62,1.755,73,0.837,95,1.321,98,1.124,122,0.327,123,0.799,126,1.085,128,1.118,136,0.927,137,1.236,139,0.541,141,2.954,143,0.927,144,0.759,145,0.927,152,0.968,153,1.429,159,3.068,161,0.837,176,1.429,185,2.559,187,1.583,209,2.324,210,1.973,317,1.583,358,1.583,359,4.551,360,3.478,361,2.926,362,3.84,363,3.84,364,3.84,365,3.84,366,3.84,367,2.926,368,3.84,369,1.982,370,2.778,371,3.068,372,2.926,373,1.982,374,1.982,375,1.982,376,2.926,377,1.982,378,1.982,379,1.982,380,1.321,381,3.068,382,1.982,383,1.583,384,1.982,385,1.982,386,1.982,387,1.982,388,2.926,389,1.583,390,1.982,391,1.982,392,1.982,393,1.982,394,1.982,395,1.982,396,1.949,397,1.949,398,2.337,399,2.926,400,2.926,401,2.926]],["title/components/UserComponent.html",[0,0.518,47,0.831]],["body/components/UserComponent.html",[0,0.804,1,0.616,2,0.321,3,0.262,4,1.104,5,1.104,6,1.104,7,1.104,8,0.207,10,1.104,13,2.416,14,1.68,16,1.637,18,1.637,20,0.872,21,0.057,23,0.385,24,0.262,25,0.108,28,1.554,31,1.554,32,2.306,34,0.822,35,1.637,36,1.409,37,1.637,38,1.858,39,1.104,40,0.68,41,1.104,42,0.616,43,1.104,44,0.616,45,2.159,46,1.104,47,1.206,48,1.434,49,1.104,50,0.03,51,0.03,62,1.769,63,1.512,73,0.822,95,1.297,96,1.297,98,1.104,122,0.321,123,0.788,126,0.995,128,0.788,136,0.914,137,1.799,139,0.788,140,1.297,143,0.616,144,0.753,145,0.616,151,1.637,153,1.68,154,0.914,176,0.95,199,2.748,204,3.04,209,1.952,235,2.079,281,2.748,322,1.554,370,2.748,371,3.04,380,1.297,381,1.554,383,1.554,396,1.923,397,1.923,398,2.306,402,1.554,403,3.441,404,2.886,405,4.258,406,2.748,407,3.806,408,4.408,409,2.886,410,1.946,411,1.946,412,1.946,413,1.946,414,1.554,415,1.554,416,1.946,417,3.441,418,1.946,419,1.946,420,1.946,421,1.946,422,1.946,423,1.946,424,2.306,425,2.886,426,1.946,427,1.946,428,2.886,429,1.946,430,1.946,431,1.946,432,1.946,433,1.946,434,1.946,435,1.946,436,1.946,437,1.946,438,1.946,439,1.554]],["title/guards/UserResolver.html",[91,1.747,134,1.28]],["body/guards/UserResolver.html",[2,0.455,3,0.371,8,0.294,20,0.879,21,0.057,23,0.545,24,0.371,25,0.153,40,0.73,48,0.874,50,0.039,51,0.039,63,1.544,73,1.165,91,2.46,96,1.838,122,0.455,123,1.008,126,0.863,128,1.265,134,1.347,136,0.874,137,1.165,139,0.753,140,1.838,141,3.246,143,1.17,144,0.73,145,1.17,147,2.95,148,0.863,151,1.565,152,1.347,153,1.347,154,1.17,155,1.565,156,1.565,157,2.203,161,1.165,185,1.838,188,2.203,197,3.552,235,1.803,389,2.203,406,2.203,415,2.203,424,2.95,440,2.758,441,2.758,442,3.693,443,4.446,444,2.758,445,4.163,446,3.693,447,2.758,448,2.758,449,2.758,450,3.693,451,3.693,452,2.95,453,2.758,454,2.758]],["title/injectables/UserService.html",[63,0.831,148,0.612]],["body/injectables/UserService.html",[2,0.51,3,0.416,8,0.329,20,0.919,21,0.057,23,0.612,24,0.416,25,0.172,38,1.51,40,0.612,48,1.473,50,0.042,51,0.042,63,1.261,79,2.47,81,1.755,122,0.51,123,1.087,126,1.028,128,1.087,136,1.261,137,1.682,139,0.844,143,0.98,144,0.787,145,0.98,148,1.028,149,2.061,152,1.51,154,0.98,155,1.755,156,1.755,180,1.755,181,2.47,252,3.933,261,3.842,452,2.47,455,2.47,456,4.649,457,3.093,458,3.093,459,3.093,460,3.093,461,3.093,462,3.093,463,3.093]],["title/coverage.html",[464,2.85]],["body/coverage.html",[0,0.916,1,0.971,8,0.326,9,2.449,21,0.056,25,0.22,42,0.971,44,0.971,47,0.971,50,0.042,51,0.042,62,1.123,63,0.971,84,2.638,120,2.043,121,2.449,144,0.606,148,1.024,154,0.971,163,2.449,198,2.449,206,1.739,235,1.497,236,2.449,243,2.449,244,2.449,308,2.449,320,4.176,358,2.449,402,2.449,439,2.449,455,2.449,464,2.449,465,3.066,466,3.066,467,3.066,468,4.913,469,3.066,470,3.066,471,3.066,472,3.959,473,3.066,474,3.066,475,3.066,476,2.449,477,3.196,478,2.449,479,3.503,480,2.449,481,2.449,482,2.449,483,3.066,484,3.066]],["title/dependencies.html",[54,1.787,485,2.194]],["body/dependencies.html",[21,0.057,23,0.676,50,0.045,51,0.045,54,1.939,69,3.388,70,2.406,73,1.444,77,2.731,87,2.731,88,2.731,98,1.939,180,1.939,414,2.731,486,3.419,487,3.419,488,3.419,489,4.241,490,5.176,491,3.419,492,3.419,493,3.419,494,3.419,495,3.419,496,3.419,497,3.419,498,3.419,499,3.419,500,3.419,501,3.419,502,3.419,503,3.419,504,3.419,505,3.419]],["title/index.html",[122,0.362,506,2.194,507,2.194]],["body/index.html",[0,0.884,3,0.43,8,0.34,14,1.56,21,0.043,40,0.632,50,0.043,51,0.043,66,2.128,154,1.012,246,3.571,396,2.128,397,2.128,508,4.064,509,4.705,510,4.47,511,4.47,512,3.194,513,3.194,514,3.194,515,4.064,516,4.858,517,4.966,518,3.194,519,3.194,520,3.194,521,3.194,522,3.194,523,3.194,524,3.194,525,3.194,526,3.194,527,3.194,528,4.858,529,3.194,530,3.194,531,3.194,532,3.194,533,3.194,534,3.194,535,2.552,536,4.064,537,4.47,538,3.194,539,3.194,540,3.194,541,3.194,542,4.47,543,3.194,544,3.194,545,3.194,546,3.194]],["title/modules.html",[52,1.507]],["body/modules.html",[21,0.05,50,0.05,51,0.05,52,1.732,53,2.326,70,2.326,547,4.099,548,4.099,549,4.099]],["title/overview.html",[550,2.85]],["body/overview.html",[0,0.651,1,1.609,21,0.054,24,0.443,25,0.183,34,1.391,42,1.436,44,1.436,47,1.436,50,0.044,51,0.044,52,1.75,53,3.028,54,1.868,55,2.63,56,2.63,57,1.868,58,2.63,59,2.63,60,2.63,61,2.63,62,1.66,63,1.436,64,3.309,65,2.63,66,2.194,134,1.608,148,0.769,272,2.63,286,3.309,550,2.63,551,3.292,552,3.292]],["title/miscellaneous/variables.html",[477,2.099,553,1.752]],["body/miscellaneous/variables.html",[21,0.056,50,0.043,51,0.043,84,3.314,118,2.567,122,0.53,144,0.932,176,2.189,180,1.823,285,3.767,380,2.987,476,2.567,477,2.141,478,2.567,479,2.567,480,3.581,481,3.581,482,3.581,535,3.259,553,2.567,554,4.483,555,3.213,556,3.213,557,3.213,558,4.08,559,3.213,560,3.213,561,3.213,562,3.213,563,3.213,564,4.483,565,3.213,566,3.213,567,3.213,568,3.213,569,3.213,570,3.213,571,3.213,572,3.213,573,3.213,574,3.213]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":320,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":272,"title":{},"body":{"injectables/GetDataService.html":{},"overview.html":{}}}],["1/5",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":439,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":286,"title":{},"body":{"injectables/GetDataService.html":{},"overview.html":{}}}],["2.5.4",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["212121",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":435,"title":{},"body":{"components/UserComponent.html":{}}}],["3",{"_index":552,"title":{},"body":{"overview.html":{}}}],["4",{"_index":551,"title":{},"body":{"overview.html":{}}}],["5.0.2",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["5.5.4",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["528303106160",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":513,"title":{},"body":{"index.html":{}}}],["7.0.0",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["7034e",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.appspot.com",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.firebaseapp.com",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.firebaseio.com",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__karma__",{"_index":480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_addusertomap",{"_index":249,"title":{},"body":{"injectables/GetDataService.html":{}}}],["_addusertomap(valu",{"_index":264,"title":{},"body":{"injectables/GetDataService.html":{}}}],["activatedrout",{"_index":407,"title":{},"body":{"components/UserComponent.html":{}}}],["activatedroutesnapshot",{"_index":443,"title":{},"body":{"guards/UserResolver.html":{}}}],["actual_compon",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["ad",{"_index":273,"title":{},"body":{"injectables/GetDataService.html":{}}}],["add",{"_index":267,"title":{},"body":{"injectables/GetDataService.html":{}}}],["af",{"_index":256,"title":{},"body":{"injectables/GetDataService.html":{}}}],["afauth",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["afd",{"_index":253,"title":{},"body":{"injectables/GetDataService.html":{}}}],["ag",{"_index":278,"title":{},"body":{"injectables/GetDataService.html":{}}}],["aizasycgdmhp1rn511loqgxeseeebefawek",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alreadi",{"_index":269,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angular",{"_index":510,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":414,"title":{},"body":{"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire/databas",{"_index":314,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angular/fire/firestor",{"_index":315,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angular/flex",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"dependencies.html":{}}}],["angularefirestor",{"_index":257,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angularfire2",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["angularfire2/databas",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/firestor",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["angularfireauth",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["angularfireauthmodul",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabas",{"_index":254,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angularfiredatabasemodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":252,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["angularfirestoremodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["apikey",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["app.compon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":120,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["arial",{"_index":430,"title":{},"body":{"components/UserComponent.html":{}}}],["array",{"_index":347,"title":{},"body":{"injectables/GetDataService.html":{}}}],["array.push(entry.get(\"url",{"_index":349,"title":{},"body":{"injectables/GetDataService.html":{}}}],["artifact",{"_index":529,"title":{},"body":{"index.html":{}}}],["attribut",{"_index":287,"title":{},"body":{"injectables/GetDataService.html":{}}}],["authdomain",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":93,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["authservic",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automat",{"_index":522,"title":{},"body":{"index.html":{}}}],["averag",{"_index":277,"title":{},"body":{"injectables/GetDataService.html":{}}}],["background",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["bar",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["beta.18",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["black",{"_index":431,"title":{},"body":{"components/UserComponent.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":549,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":131,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":528,"title":{},"body":{"index.html":{}}}],["callback",{"_index":279,"title":{},"body":{"injectables/GetDataService.html":{}}}],["callback(err",{"_index":328,"title":{},"body":{"injectables/GetDataService.html":{}}}],["callback(new",{"_index":342,"title":{},"body":{"injectables/GetDataService.html":{}}}],["callback(nul",{"_index":327,"title":{},"body":{"injectables/GetDataService.html":{}}}],["canactiv",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["chang",{"_index":524,"title":{},"body":{"index.html":{}}}],["check",{"_index":545,"title":{},"body":{"index.html":{}}}],["class",{"_index":25,"title":{"classes/AppPage.html":{},"classes/FirebaseUserModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classement",{"_index":351,"title":{},"body":{"injectables/GetDataService.html":{}}}],["cli",{"_index":511,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":259,"title":{},"body":{"injectables/GetDataService.html":{}}}],["cluster_appmodul",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":525,"title":{},"body":{"index.html":{}}}],["color",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["console.error(err",{"_index":218,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log('logout",{"_index":423,"title":{},"body":{"components/UserComponent.html":{}}}],["console.log('test",{"_index":215,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(err",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["console.log(r",{"_index":219,"title":{},"body":{"components/DashboardComponent.html":{}}}],["const",{"_index":322,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{}}}],["constructor",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(af",{"_index":251,"title":{},"body":{"injectables/GetDataService.html":{}}}],["constructor(afauth",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservic",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(db",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(getdataservic",{"_index":205,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(priv",{"_index":214,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["constructor(publ",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(userservic",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["context",{"_index":481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["core/auth.guard",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["core/auth.servic",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["core/user.model",{"_index":415,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["core/user.servic",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["coverag",{"_index":464,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":238,"title":{},"body":{"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{}}}],["createform",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{}}}],["dashboard",{"_index":200,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["dashboard.component.css",{"_index":201,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":202,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":42,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":417,"title":{},"body":{"components/UserComponent.html":{}}}],["data.servic",{"_index":213,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data.service.t",{"_index":244,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["data.service.ts:12",{"_index":255,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:128",{"_index":294,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:146",{"_index":298,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:164",{"_index":301,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:179",{"_index":266,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:26",{"_index":275,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:47",{"_index":284,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:74",{"_index":313,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:96",{"_index":311,"title":{},"body":{"injectables/GetDataService.html":{}}}],["databas",{"_index":248,"title":{},"body":{"injectables/GetDataService.html":{}}}],["databaseurl",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":261,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["declar",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":126,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["depend",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":245,"title":{},"body":{"injectables/GetDataService.html":{}}}],["dev",{"_index":519,"title":{},"body":{"index.html":{}}}],["develop",{"_index":514,"title":{},"body":{"index.html":{}}}],["diagnost",{"_index":295,"title":{},"body":{"injectables/GetDataService.html":{}}}],["direct",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":527,"title":{},"body":{"index.html":{}}}],["directori",{"_index":532,"title":{},"body":{"index.html":{}}}],["dist",{"_index":531,"title":{},"body":{"index.html":{}}}],["docteur",{"_index":425,"title":{},"body":{"components/UserComponent.html":{}}}],["document",{"_index":308,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["document'",{"_index":306,"title":{},"body":{"injectables/GetDataService.html":{}}}],["dofacebooklogin",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["dogooglelogin",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologin",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologin(valu",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologout",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["dotwitterlogin",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynam",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.t",{"_index":121,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":129,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":127,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":303,"title":{},"body":{"injectables/GetDataService.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["element(by.css('app",{"_index":132,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{}}}],["encapsul",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["entri",{"_index":323,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry.get('ag",{"_index":326,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry.get('sex",{"_index":332,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry_ag",{"_index":325,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry_gend",{"_index":331,"title":{},"body":{"injectables/GetDataService.html":{}}}],["environ",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{}}}],["err.messag",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["error",{"_index":281,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{}}}],["error('no",{"_index":343,"title":{},"body":{"injectables/GetDataService.html":{}}}],["errormessag",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{}}}],["execut",{"_index":538,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["facebook",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{}}}],["fals",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":429,"title":{},"body":{"components/UserComponent.html":{}}}],["fb",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["femm",{"_index":334,"title":{},"body":{"injectables/GetDataService.html":{}}}],["ffffff",{"_index":426,"title":{},"body":{"components/UserComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["firebas",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth().currentus",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth().onauthstatechanged(funct",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["firebase.auth().signinwithemailandpassword(value.email",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.firestore.collectionrefer",{"_index":337,"title":{},"body":{"injectables/GetDataService.html":{}}}],["firebase.firestore.queri",{"_index":338,"title":{},"body":{"injectables/GetDataService.html":{}}}],["firebase/app",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["firebaseusermodel",{"_index":235,"title":{"classes/FirebaseUserModel.html":{}},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"coverage.html":{}}}],["firestor",{"_index":260,"title":{},"body":{"injectables/GetDataService.html":{}}}],["first",{"_index":280,"title":{},"body":{"injectables/GetDataService.html":{}}}],["flag",{"_index":534,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["font",{"_index":428,"title":{},"body":{"components/UserComponent.html":{}}}],["formbuild",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["formgroup",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["further",{"_index":541,"title":{},"body":{"index.html":{}}}],["galeri",{"_index":234,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gener",{"_index":509,"title":{},"body":{"index.html":{}}}],["get",{"_index":506,"title":{"index.html":{}},"body":{}}],["getaverageag",{"_index":250,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getaverageage(callback",{"_index":274,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getaveragegend",{"_index":221,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getaveragegender(callback",{"_index":283,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getcurrentus",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["getdataservic",{"_index":206,"title":{"injectables/GetDataService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"coverage.html":{}}}],["getimages(callback",{"_index":345,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getmostdiagnosticsus",{"_index":229,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getmostdiagnosticsusers(callback",{"_index":293,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getmostpostsus",{"_index":227,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getmostpostsusers(callback",{"_index":297,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getmostupvot",{"_index":231,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getmostupvotes(callback",{"_index":300,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getparagraphtext",{"_index":124,"title":{},"body":{"classes/AppPage.html":{}}}],["getpostbyid",{"_index":225,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getpostbyid(id",{"_index":310,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getuserbyid",{"_index":223,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getuserbyid(id",{"_index":312,"title":{},"body":{"injectables/GetDataService.html":{}}}],["go",{"_index":544,"title":{},"body":{"index.html":{}}}],["googl",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["guard",{"_index":134,"title":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":133,"title":{},"body":{"classes/AppPage.html":{}}}],["height",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":542,"title":{},"body":{"index.html":{}}}],["homm",{"_index":333,"title":{},"body":{"injectables/GetDataService.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["http://dsi",{"_index":447,"title":{},"body":{"guards/UserResolver.html":{}}}],["http://localhost:4200",{"_index":521,"title":{},"body":{"index.html":{}}}],["https://loginang",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":307,"title":{},"body":{"injectables/GetDataService.html":{}}}],["identifi",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":203,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{}}}],["images.doc",{"_index":348,"title":{},"body":{"injectables/GetDataService.html":{}}}],["implement",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["increment",{"_index":270,"title":{},"body":{"injectables/GetDataService.html":{}}}],["index",{"_index":122,"title":{"index.html":{}},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":148,"title":{"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["interact",{"_index":247,"title":{},"body":{"injectables/GetDataService.html":{}}}],["it'",{"_index":271,"title":{},"body":{"injectables/GetDataService.html":{}}}],["js",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":540,"title":{},"body":{"index.html":{}}}],["key",{"_index":268,"title":{},"body":{"injectables/GetDataService.html":{}}}],["kimi",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["layout",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["locat",{"_index":408,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login.component.html",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.scss",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["loginang",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":44,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":405,"title":{},"body":{"components/UserComponent.html":{}}}],["man",{"_index":292,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map",{"_index":265,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map.get(valu",{"_index":357,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map.has(valu",{"_index":355,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map.set(valu",{"_index":356,"title":{},"body":{"injectables/GetDataService.html":{}}}],["margin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["messagingsenderid",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["method",{"_index":123,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["miscellan",{"_index":553,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":52,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"injectables/GetDataService.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["more",{"_index":543,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navig",{"_index":520,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":125,"title":{},"body":{"classes/AppPage.html":{}}}],["nb",{"_index":321,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_f",{"_index":329,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_femm",{"_index":288,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_homm",{"_index":289,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_m",{"_index":330,"title":{},"body":{"injectables/GetDataService.html":{}}}],["new",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":517,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":204,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserComponent.html":{}}}],["number",{"_index":276,"title":{},"body":{"injectables/GetDataService.html":{}}}],["object",{"_index":285,"title":{},"body":{"injectables/GetDataService.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":199,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserComponent.html":{}}}],["option",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":550,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":485,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["panel",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["param",{"_index":317,"title":{},"body":{"injectables/GetDataService.html":{},"components/LoginComponent.html":{}}}],["paramet",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["password",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{},"guards/UserResolver.html":{}}}],["pic",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pictur",{"_index":437,"title":{},"body":{"components/UserComponent.html":{}}}],["post",{"_index":299,"title":{},"body":{"injectables/GetDataService.html":{}}}],["privat",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["prod",{"_index":533,"title":{},"body":{"index.html":{}}}],["product",{"_index":535,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":436,"title":{},"body":{"components/UserComponent.html":{}}}],["project",{"_index":508,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}}}],["promise((resolv",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["properti",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":130,"title":{},"body":{"classes/AppPage.html":{}}}],["provid",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/FirebaseUserModel.html":{},"overview.html":{}}}],["providedin",{"_index":316,"title":{},"body":{"injectables/GetDataService.html":{}}}],["provider.addscope('email",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["provider.addscope('profil",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["queri",{"_index":258,"title":{},"body":{"injectables/GetDataService.html":{}}}],["query.limit(1",{"_index":340,"title":{},"body":{"injectables/GetDataService.html":{}}}],["query.where('userid",{"_index":339,"title":{},"body":{"injectables/GetDataService.html":{}}}],["re",{"_index":217,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["reactiveformsmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":546,"title":{},"body":{"index.html":{}}}],["real",{"_index":262,"title":{},"body":{"injectables/GetDataService.html":{}}}],["ref",{"_index":336,"title":{},"body":{"injectables/GetDataService.html":{}}}],["reject",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["reject('no",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["reject(err",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"guards/UserResolver.html":{}}}],["reload",{"_index":523,"title":{},"body":{"index.html":{}}}],["repres",{"_index":304,"title":{},"body":{"injectables/GetDataService.html":{}}}],["requir",{"_index":482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.displaynam",{"_index":450,"title":{},"body":{"guards/UserResolver.html":{}}}],["res.photourl",{"_index":453,"title":{},"body":{"guards/UserResolver.html":{}}}],["res.providerdata[0].providerid",{"_index":445,"title":{},"body":{"guards/UserResolver.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"guards/UserResolver.html":{}}}],["resolve(fals",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(r",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(rout",{"_index":442,"title":{},"body":{"guards/UserResolver.html":{}}}],["resolve(tru",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(us",{"_index":452,"title":{},"body":{"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["respect",{"_index":290,"title":{},"body":{"injectables/GetDataService.html":{}}}],["result",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":128,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GetDataService.html":{}}}],["root'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["rootrouterconfig",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["rout",{"_index":406,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["routedata['data",{"_index":418,"title":{},"body":{"components/UserComponent.html":{}}}],["router",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{}}}],["routermodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(rootrouterconfig",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":516,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["san",{"_index":432,"title":{},"body":{"components/UserComponent.html":{}}}],["scaffold",{"_index":526,"title":{},"body":{"index.html":{}}}],["second",{"_index":282,"title":{},"body":{"injectables/GetDataService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["send",{"_index":296,"title":{},"body":{"injectables/GetDataService.html":{}}}],["serif",{"_index":433,"title":{},"body":{"components/UserComponent.html":{}}}],["serv",{"_index":518,"title":{},"body":{"index.html":{}}}],["server",{"_index":515,"title":{},"body":{"index.html":{}}}],["services/get",{"_index":212,"title":{},"body":{"components/DashboardComponent.html":{}}}],["set",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["signinwithpopup(provid",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["size",{"_index":434,"title":{},"body":{"components/UserComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spec\\.t",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.t",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/auth.guard.t",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.guard.ts:14",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.guard.ts:8",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.service.t",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/auth.service.ts:11",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:25",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:39",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:56",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:6",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:65",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:8",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/user.model.t",{"_index":236,"title":{},"body":{"classes/FirebaseUserModel.html":{},"coverage.html":{}}}],["src/app/core/user.model.ts:2",{"_index":239,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.model.ts:3",{"_index":240,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.model.ts:4",{"_index":237,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.service.t",{"_index":455,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:13",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:7",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:9",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/login/login.component.t",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":372,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":373,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":374,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:50",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/get",{"_index":243,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["src/app/user/dashboard/dashboard.component.t",{"_index":198,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:14",{"_index":211,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:16",{"_index":208,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:9",{"_index":207,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/user.component.t",{"_index":402,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts:17",{"_index":409,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:20",{"_index":413,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:21",{"_index":412,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:29",{"_index":411,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:41",{"_index":410,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.resolver.t",{"_index":440,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/app/user/user.resolver.ts:12",{"_index":444,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/app/user/user.resolver.ts:7",{"_index":441,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/environments/environment.prod.t",{"_index":476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":507,"title":{"index.html":{}},"body":{}}],["statement",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":530,"title":{},"body":{"index.html":{}}}],["string",{"_index":210,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["support",{"_index":547,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":548,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["test",{"_index":537,"title":{},"body":{"index.html":{}}}],["then((r",{"_index":421,"title":{},"body":{"components/UserComponent.html":{}}}],["then(r",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{}}}],["then(us",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._addusertomap(entry.get('userid",{"_index":352,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afauth.auth",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afd.object('upvotes').valuechanges().subscribe((r",{"_index":354,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('diagnostics').get().subscribe((us",{"_index":350,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('image').get().subscribe((imag",{"_index":346,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('posts').doc(id).valuechanges().subscribe((post",{"_index":344,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('posts').get().subscribe((us",{"_index":353,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('usersinfo",{"_index":335,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('usersinfos').get().subscribe((us",{"_index":318,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.authservice.dofacebooklogin",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dogooglelogin",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dologin(valu",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dologout",{"_index":420,"title":{},"body":{"components/UserComponent.html":{}}}],["this.authservice.dotwitterlogin",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createform",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessag",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fb.group",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getdataservice.getaverageage((err",{"_index":216,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getaveragegender((err",{"_index":220,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getimages((err,r",{"_index":232,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostdiagnosticsusers((err",{"_index":228,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostpostsusers((err",{"_index":226,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostupvotes((err",{"_index":230,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getpostbyid('3erbnah2xzu8b3ji2si8",{"_index":224,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getuserbyid('dhaxx2isz3fbxes0vl9jszmxgy32",{"_index":222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.imag",{"_index":233,"title":{},"body":{"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{}}}],["this.location.back",{"_index":422,"title":{},"body":{"components/UserComponent.html":{}}}],["this.loginform",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.nam",{"_index":241,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.provid",{"_index":242,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.route.data.subscribe(routedata",{"_index":416,"title":{},"body":{"components/UserComponent.html":{}}}],["this.router.navigate(['/login",{"_index":454,"title":{},"body":{"guards/UserResolver.html":{}}}],["this.router.navigate(['/us",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.us",{"_index":419,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getcurrentus",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}}}],["time",{"_index":263,"title":{},"body":{"injectables/GetDataService.html":{}}}],["total_ag",{"_index":319,"title":{},"body":{"injectables/GetDataService.html":{}}}],["transpar",{"_index":427,"title":{},"body":{"components/UserComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["true",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tryfacebooklogin",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{}}}],["trygooglelogin",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["trylogin",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{}}}],["trylogin(valu",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytwitterlogin",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{}}}],["twitter",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{}}}],["type",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":536,"title":{},"body":{"index.html":{}}}],["upvot",{"_index":302,"title":{},"body":{"injectables/GetDataService.html":{}}}],["us",{"_index":246,"title":{},"body":{"injectables/GetDataService.html":{},"index.html":{}}}],["usehash",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.component.html",{"_index":404,"title":{},"body":{"components/UserComponent.html":{}}}],["user.imag",{"_index":446,"title":{},"body":{"guards/UserResolver.html":{}}}],["user.nam",{"_index":424,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["user.provid",{"_index":451,"title":{},"body":{"guards/UserResolver.html":{}}}],["user.scss",{"_index":403,"title":{},"body":{"components/UserComponent.html":{}}}],["user.servic",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["user/dashboard/dashboard.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.compon",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.resolv",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["usercompon",{"_index":47,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":309,"title":{},"body":{"injectables/GetDataService.html":{}}}],["userresolv",{"_index":91,"title":{"guards/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/UserResolver.html":{}}}],["users.doc",{"_index":324,"title":{},"body":{"injectables/GetDataService.html":{}}}],["userservic",{"_index":63,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["validators.requir",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["value.password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["valuechanges().subscribe((us",{"_index":341,"title":{},"body":{"injectables/GetDataService.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["variabl",{"_index":477,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vd.github.io/patternlab",{"_index":448,"title":{},"body":{"guards/UserResolver.html":{}}}],["vd/images/fpo_avatar.png",{"_index":449,"title":{},"body":{"guards/UserResolver.html":{}}}],["version",{"_index":512,"title":{},"body":{"index.html":{}}}],["via",{"_index":539,"title":{},"body":{"index.html":{}}}],["viewencapsul",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.non",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":209,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["width",{"_index":438,"title":{},"body":{"components/UserComponent.html":{}}}],["woman",{"_index":291,"title":{},"body":{"injectables/GetDataService.html":{}}}],["zone",{"_index":305,"title":{},"body":{"injectables/GetDataService.html":{}}}],["zone.j",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                * {\n  margin: 0px;\n}\n.app-panel{\n  height: 100vh;\n  background-color: #212121;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                UserComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { rootRouterConfig } from './app.routes';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from '../environments/environment';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { UserResolver } from './user/user.resolver';\nimport { AuthGuard } from './core/auth.guard';\nimport { AuthService } from './core/auth.service';\nimport { UserService } from './core/user.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './user/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(rootRouterConfig, { useHash: false }),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n  ],\n  providers: [AuthService, UserService, UserResolver, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.guard.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {UserService} from './user.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(public userService: UserService,\n              private router: Router) {\n  }\n\n  canActivate(): Promise {\n    return new Promise((resolve, reject) => {\n      this.userService.getCurrentUser()\n        .then(user => {\n          this.router.navigate(['/user']);\n          return resolve(false);\n        }, err => {\n          return resolve(true);\n        });\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFacebookLogin\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                doLogin\n                            \n                            \n                                doLogout\n                            \n                            \n                                doTwitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doFacebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoFacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoLogin(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doTwitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoTwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(public afAuth: AngularFireAuth) {\n  }\n\n  doFacebookLogin() {\n    return new Promise((resolve, reject) => {\n      let provider = new firebase.auth.FacebookAuthProvider();\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n  doTwitterLogin() {\n    return new Promise((resolve, reject) => {\n      let provider = new firebase.auth.TwitterAuthProvider();\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n  doGoogleLogin() {\n    return new Promise((resolve, reject) => {\n      let provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n\n  doLogin(value) {\n    return new Promise((resolve, reject) => {\n      firebase.auth().signInWithEmailAndPassword(value.email, value.password)\n        .then(res => {\n          resolve(res);\n        }, err => reject(err));\n    });\n  }\n\n  doLogout() {\n    return new Promise((resolve, reject) => {\n      if (firebase.auth().currentUser) {\n        this.afAuth.auth.signOut();\n        resolve();\n      }\n      else {\n        reject();\n      }\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getDataService: GetDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/dashboard/dashboard.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getDataService\n                                                  \n                                                        \n                                                                    GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/dashboard/dashboard.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        images:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/dashboard/dashboard.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GetDataService} from '../../services/get-data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private getDataService: GetDataService) {\n  }\n\n  images: string[];\n\n  ngOnInit() {\n    console.log('Tests :');\n    this.getDataService.getAverageAge((err, res) => {\n      console.log('Test getDataService ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getAverageGender((err, res) => {\n      console.log('Test getAverageGender ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getUserById('dhaXX2isz3fbXES0Vl9JszmXGY32', (err, res) => {\n      console.log('Test getUserById ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getPostById('3ERbnaH2XzU8B3JI2si8', (err, res) => {\n      console.log('Test getPostById ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostPostsUsers((err, res) => {\n      console.log('Test getMostPostsUsers ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostDiagnosticsUsers((err, res) => {\n      console.log('Test getMostDiagnosticsUsers ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostUpvotes((err, res) => {\n      console.log('Test getMostUpvotes ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n\n    this.getDataService.getImages((err,res) => {\n      if (err) {\n        return console.error(err);\n      }\n      this.images = res;\n    });\n  }\n\n}\n\n    \n\n    \n        Galeries\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Galeries        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseUserModel.html":{"url":"classes/FirebaseUserModel.html","title":"class - FirebaseUserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseUserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.model.ts:4\n                            \n                        \n\n                \n                    \n                            Create a user\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        image:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        provider:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FirebaseUserModel {\n  image: string;\n  name: string;\n  provider: string;\n\n  /**\n   * Create a user\n   *\n   */\n  constructor() {\n    this.image = '';\n    this.name = '';\n    this.provider = '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetDataService.html":{"url":"injectables/GetDataService.html","title":"injectable - GetDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/get-data.service.ts\n        \n\n            \n                Description\n            \n            \n                GetDataService is used for interacting with the database\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addUserToMap\n                            \n                            \n                                getAverageAge\n                            \n                            \n                                getAverageGender\n                            \n                            \n                                getMostDiagnosticsUsers\n                            \n                            \n                                getMostPostsUsers\n                            \n                            \n                                getMostUpvotes\n                            \n                            \n                                getPostById\n                            \n                            \n                                getUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, afd: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/get-data.service.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngulareFirestore module used for querying the cloud firestore DB\n\n                                                        \n                                                \n                                                \n                                                        afd\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngularFireDatabase module used for querying the Real Time DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _addUserToMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _addUserToMap(value: string, map: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:179\n                            \n                        \n\n\n                \n                    \n                            Add a key to a map if the key is already there increment it's value by 1\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The value to add\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The map where the value is added\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Map\n\n                            \n                                \n                                    the map with the added value\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAverageAge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAverageAge(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Get a number of the users average age\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAverageGender\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAverageGender(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Get an object with 2 attributes, nb_femme & nb_homme, respectively the number of woman and the number of man\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostDiagnosticsUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostDiagnosticsUsers(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Get a map of the users as the key and the number of diagnostics send as the value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostPostsUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostPostsUsers(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Get a map of the users as the key and the number of posts created as the value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostUpvotes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostUpvotes(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:164\n                            \n                        \n\n\n                \n                    \n                            Get upvotes as an object, each attributes represent a 'zones' document's id and each document have attributes\nthat represent userId and the number of upvotes as their value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                callback\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPostById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPostById(id: string, callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Get a post by it's document id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the post (document) to get\n\n                                                        \n                                                \n                                                \n                                                        callback\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserById(id: string, callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Get a user by it's id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the user to get\n\n                                                        \n                                                \n                                                \n                                                        callback\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport {AngularFirestore} from '@angular/fire/firestore';\n\n/**\n * GetDataService is used for interacting with the database\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetDataService {\n\n  /**\n   * constructor\n   * @param afs AngulareFirestore module used for querying the cloud firestore DB\n   * @param afd AngularFireDatabase module used for querying the Real Time DB\n   */\n  constructor(private afs: AngularFirestore, private afd: AngularFireDatabase) {\n  }\n\n  /**\n   * Get a number of the users average age\n   * @param callback  The first parameter of the callback is the error, the second is the value\n   */\n  getAverageAge(callback) {\n    this.afs.collection('usersInfos').get().subscribe((users) => {\n      let total_age = 0;\n      let nb = 0;\n      let value;\n      for (const entry of users.docs) {\n        const entry_age = entry.get('age');\n        total_age = total_age + entry_age;\n        nb++;\n      }\n      value = total_age / nb;\n      return callback(null, value);\n    }, (err) => {\n      return callback(err);\n    });\n  }\n\n  /**\n   * Get an object with 2 attributes, nb_femme & nb_homme, respectively the number of woman and the number of man\n   * @param callback  The first parameter of the callback is the error, the second is the value\n   */\n  getAverageGender(callback) {\n    this.afs.collection('usersInfos').get().subscribe((users) => {\n      let nb_f = 0;\n      let nb_m = 0;\n      for (const entry of users.docs) {\n        const entry_gender = entry.get('sexe');\n        if (entry_gender === 'homme') {\n          nb_m++;\n        }\n        if (entry_gender === 'femme') {\n          nb_f++;\n        }\n      }\n      callback(null, {\n        nb_femme: nb_f,\n        nb_homme: nb_m\n      });\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n  /**\n   * Get a user by it's id\n   * @param id The id of the user to get\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getUserById(id: string, callback) {\n    if (id) {\n      this.afs.collection('usersInfos', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        query = query.where('userId', '==', id);\n        query = query.limit(1);\n        return query;\n      }).valueChanges().subscribe((user) => {\n        return callback(null, user);\n      }, (err) => {\n        return callback(err);\n      });\n    } else {\n      callback(new Error('no id'));\n    }\n  }\n\n  /**\n   * Get a post by it's document id\n   * @param id The id of the post (document) to get\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getPostById(id: string, callback) {\n    if (id) {\n      this.afs.collection('posts').doc(id).valueChanges().subscribe((post) => {\n        return callback(null, post);\n      }, (err) => {\n        return callback(err);\n      });\n    } else {\n      callback(new Error('no id'));\n    }\n  }\n\n  /*\n  getImages(callback) {\n      this.afs.collection('image').get().subscribe((images) => {\n\n        let array: string[] = [];\n\n        for (const entry of images.docs) {\n          array.push(entry.get(\"url\"));\n        }\n\n        return callback(null, array);\n      }, (err) => {\n        return callback(err);\n      });\n  }*/\n\n  /**\n   * Get a map of the users as the key and the number of diagnostics send as the value\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getMostDiagnosticsUsers(callback) {\n  this.afs.collection('diagnostics').get().subscribe((users) => {\n    let classement = new Map();\n\n    for (const entry of users.docs) {\n      classement = this._addUserToMap(entry.get('userId'), classement);\n    }\n\n    callback(null, classement);\n  }, (err) => {\n    callback(err);\n  });\n  }\n\n  /**\n   * Get a map of the users as the key and the number of posts created as the value\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getMostPostsUsers(callback) {\n    this.afs.collection('posts').get().subscribe((users) => {\n      let classement = new Map();\n      for (const entry of users.docs) {\n        classement = this._addUserToMap(entry.get('userId'), classement);\n      }\n      callback(null, classement);\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n\n  /**\n   * Get upvotes as an object, each attributes represent a 'zones' document's id and each document have attributes\n   * that represent userId and the number of upvotes as their value\n   * @param callback callback\n   */\n  getMostUpvotes(callback) {\n    this.afd.object('upvotes').valueChanges().subscribe((res) => {\n      callback(null, res);\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n\n  /**\n   * Add a key to a map if the key is already there increment it's value by 1\n   * @param value The value to add\n   * @param map The map where the value is added\n   * @return the map with the added value\n   */\n  private _addUserToMap(value: string, map: Map): Map {\n    if (map.has(value)) {\n      return map.set(value, map.get(value) + 1);\n    }\n    return map.set(value, 1);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login\n            \n\n            \n                styleUrls\n                login.scss\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                tryFacebookLogin\n                            \n                            \n                                tryGoogleLogin\n                            \n                            \n                                tryLogin\n                            \n                            \n                                tryTwitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryFacebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryFacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryLogin(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryTwitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryTwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AuthService} from '../core/auth.service';\nimport {Router, Params} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.scss']\n})\nexport class LoginComponent {\n\n  loginForm: FormGroup;\n  errorMessage: string = '';\n\n  constructor(public authService: AuthService,\n              private router: Router,\n              private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  tryFacebookLogin() {\n    this.authService.doFacebookLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  tryTwitterLogin() {\n    this.authService.doTwitterLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  tryGoogleLogin() {\n    this.authService.doGoogleLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  tryLogin(value) {\n    this.authService.doLogin(value)\n      .then(res => {\n        this.router.navigate(['/user']);\n      }, err => {\n        console.log(err);\n        this.errorMessage = err.message;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Kimi Monitoring\n          \n        \n        \n          \n            \n              settings\n            \n          \n        \n      \n    \n  \n  \n    \n      Login with Facebook\n    \n    \n      Login with Google\n    \n    \n      Login with Twitter\n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    login.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Kimi Monitoring                                                              settings                                                      Login with Facebook              Login with Google              Login with Twitter      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-user\n            \n\n            \n                styleUrls\n                user.scss\n            \n\n\n\n            \n                templateUrl\n                user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthService, route: ActivatedRoute, location: Location, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FirebaseUserModel\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseUserModel\n\n                        \n                    \n                    \n                        \n                            Default value : new FirebaseUserModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../core/user.service';\nimport { AuthService } from '../core/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FirebaseUserModel } from '../core/user.model';\n\n@Component({\n  selector: 'page-user',\n  templateUrl: 'user.component.html',\n  styleUrls: ['user.scss']\n})\n\nexport class UserComponent implements OnInit {\n\n  user: FirebaseUserModel = new FirebaseUserModel();\n\n  constructor(\n    public userService: UserService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private fb: FormBuilder\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      const data = routeData['data'];\n      if (data) {\n        this.user = data;\n      }\n    });\n  }\n\n\n\n\n  logout() {\n    this.authService.doLogout()\n    .then((res) => {\n      this.location.back();\n    }, (error) => {\n      console.log('Logout error', error);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Kimi Monitoring\n            \n          \n          \n            \n              Logout\n            \n            \n              \n                settings\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              \n                \n                  {{user.name}}\n                \n                \n                  Docteur\n                \n              \n            \n          \n        \n      \n      \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    user.scss\n                \n                .app-user-panel{\n  color: #ffffff ;\n  background-color: transparent;\n  font-family: \"Arial Black\", sans-serif;\n  font-size: 2em;\n}\n\n.profile-picture{\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Kimi Monitoring                                                          Logout                                                      settings                                                                                                                                                            {{user.name}}                                                  Docteur                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserResolver.html":{"url":"guards/UserResolver.html","title":"guard - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/user/user.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.resolver.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {Resolve, ActivatedRouteSnapshot, Router} from '@angular/router';\nimport {UserService} from '../core/user.service';\nimport {FirebaseUserModel} from '../core/user.model';\n\n@Injectable()\nexport class UserResolver implements Resolve {\n\n  constructor(public userService: UserService, private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Promise {\n\n    let user = new FirebaseUserModel();\n\n    return new Promise((resolve, reject) => {\n      this.userService.getCurrentUser()\n        .then(res => {\n          if (res.providerData[0].providerId == 'password') {\n            user.image = 'http://dsi-vd.github.io/patternlab-vd/images/fpo_avatar.png';\n            user.name = res.displayName;\n            user.provider = res.providerData[0].providerId;\n            return resolve(user);\n          } else {\n            user.image = res.photoURL;\n            user.name = res.displayName;\n            user.provider = res.providerData[0].providerId;\n            return resolve(user);\n          }\n        }, err => {\n          this.router.navigate(['/login']);\n          return reject(err);\n        });\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/user.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        db:     AngularFirestore\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFirestore} from 'angularfire2/firestore';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\n\n@Injectable()\nexport class UserService {\n\n  constructor(public db: AngularFirestore) {\n  }\n\n\n  getCurrentUser() {\n    return new Promise((resolve, reject) => {\n      var user = firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          resolve(user);\n        } else {\n          reject('No user logged in');\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/user.model.ts\n            \n            \n                class\n            \n            \n                FirebaseUserModel\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/get-data.service.ts\n            \n            \n                injectable\n            \n            \n                GetDataService\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/user/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user/user.component.ts\n            \n            \n                component\n            \n            \n                UserComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                __karma__\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/flex-layout : ^6.0.0-beta.18\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            angularfire2 : ^5.0.2\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.5.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKimi-Monitoring\nThis project was generated with Angular CLI version 6.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __karma__   (src/.../test.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __karma__\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        __karma__:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCGDmHp1RN511loQgxeSeeeBeFaWek-pIc',\n    authDomain: 'loginang-7034e.firebaseapp.com',\n    databaseURL: 'https://loginang-7034e.firebaseio.com',\n    projectId: 'loginang-7034e',\n    storageBucket: 'loginang-7034e.appspot.com',\n    messagingSenderId: '528303106160'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
