var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.463,1,0.776]],["body/components/AppComponent.html",[0,0.858,1,1.392,2,0.565,3,0.46,4,1.75,5,1.75,6,1.75,7,1.75,8,0.363,9,2.492,10,1.75,11,3.986,12,3.986,13,2.714,14,2.271,15,2.627,16,2.224,17,4.382,18,2.224,19,3.986,20,0.565,21,0.06,22,3.136,23,0.565,24,0.363,25,0.189,26,3.136,27,3.136,28,2.492,29,3.136,30,3.136,31,2.492,32,2.492,33,3.136,34,1.286,35,2.224,36,1.902,37,2.224,38,2.2,39,1.75,40,0.719,41,1.75,42,0.807,43,1.75,44,0.947,45,2.224,46,1.75,47,0.807,48,0.68,49,1.75,50,0.045,51,0.045]],["title/modules/AppModule.html",[52,0.463,53,1.434]],["body/modules/AppModule.html",[1,1.483,2,0.419,3,0.341,8,0.269,20,0.939,21,0.061,23,0.419,24,0.377,25,0.14,34,0.952,42,1.147,44,1.347,47,1.147,50,0.037,51,0.037,52,0.588,53,2.825,54,1.296,55,2.993,56,2.993,57,1.797,58,1.845,59,1.845,60,1.845,61,1.845,62,1.571,63,1.571,64,2.59,65,1.845,66,1.296,67,2.323,68,3.26,69,2.59,70,1.531,71,3.26,72,2.323,73,0.952,74,2.323,75,2.323,76,2.323,77,1.296,78,3.26,79,1.845,80,3.26,81,1.845,82,3.26,83,2.323,84,1.531,85,2.323,86,3.26,87,1.845,88,1.845,89,2.323,90,2.323,91,2.148,92,2.323,93,2.148,94,2.323,95,1.531,96,1.845,97,3.26,98,1.845,99,3.26,100,2.323,101,3.26,102,3.26,103,2.323,104,3.26,105,2.323,106,3.26,107,2.323,108,3.26,109,2.323,110,3.26,111,2.323,112,3.26,113,2.323,114,2.323,115,2.323,116,2.323,117,2.323,118,1.845,119,2.323]],["title/guards/AuthGuard.html",[93,1.694,120,1.226]],["body/guards/AuthGuard.html",[2,0.502,3,0.409,8,0.323,20,0.746,21,0.06,23,0.502,24,0.323,25,0.168,40,0.502,48,1.058,50,0.042,51,0.042,52,0.665,63,1.719,73,1.142,93,2.432,120,1.975,121,2.786,122,1.114,123,1.761,124,3.501,125,3.691,126,1.513,127,0.502,128,0.841,129,1.142,130,0.949,131,4.711,132,0.898,133,2.213,134,2.782,135,0.949,136,2.786,137,0.841,138,0.409,139,0.841,140,1.513,141,2.786,142,2.432,143,1.384,144,2.628,145,1.513,146,2.059,147,2.059,148,2.309,149,0.801,150,2.786,151,1.329,152,1.3,153,1.329,154,1.329,155,0.841,156,1.554,157,2.213,158,2.786,159,2.213,160,2.786,161,1.329,162,2.786]],["title/injectables/AuthService.html",[62,0.906,149,0.557]],["body/injectables/AuthService.html",[2,0.353,3,0.288,8,0.227,20,0.618,21,0.061,23,0.353,24,0.227,25,0.118,40,0.353,48,1.079,50,0.033,51,0.033,52,0.618,57,1.634,62,1.017,66,2.108,81,1.558,122,0.871,123,1.377,126,1.404,127,0.353,128,0.871,129,1.183,130,0.742,132,0.743,135,1.083,137,0.592,138,0.424,139,0.592,140,1.183,142,2.49,143,1.437,144,2.493,145,2.028,146,2.544,147,2.743,148,2.681,149,0.743,152,0.691,153,0.935,155,1.315,156,2.108,161,1.634,163,1.558,164,4.212,165,3.778,166,3.778,167,3.778,168,3.778,169,1.961,170,4.212,171,1.961,172,1.961,173,3.55,174,1.902,175,2.776,176,4.468,177,1.961,178,1.902,179,1.961,180,1.961,181,1.902,182,1.961,183,1.558,184,2.257,185,1.961,186,3.425,187,3.425,188,2.257,189,3.425,190,3.425,191,2.721,192,1.961,193,1.961,194,1.961,195,1.961,196,1.961,197,1.961]],["title/components/DashboardComponent.html",[0,0.463,42,0.661]],["body/components/DashboardComponent.html",[0,0.816,1,0.672,2,0.401,3,0.326,4,1.241,5,1.241,6,1.241,7,1.241,8,0.258,10,1.241,13,2.454,14,1.912,16,1.764,18,1.764,20,0.57,21,0.061,23,0.401,24,0.258,25,0.134,34,0.912,35,1.764,36,1.509,37,1.764,38,1.912,39,1.241,40,0.663,41,1.241,42,1.031,43,1.241,44,0.672,45,1.764,46,1.241,47,0.572,48,0.483,49,1.241,50,0.045,51,0.036,122,0.955,127,0.401,130,0.813,132,0.798,135,0.946,137,0.672,138,0.326,139,0.672,143,1.421,151,1.509,152,0.784,161,2.245,198,1.768,199,4.007,200,2.923,201,3.68,202,3.163,203,4.007,204,3.183,205,2.225,206,2.277,207,2.225,208,2.225,209,2.513,210,2.513,211,3.163,212,3.163,213,1.764,214,2.225,215,1.768,216,1.768,217,1.466,218,4.625,219,2.225,220,3.595,221,4.525,222,4.525,223,2.225,224,1.768,225,2.225,226,1.768,227,2.225,228,1.768,229,2.225,230,1.768,231,2.225,232,1.768,233,2.225,234,1.768,235,3.163]],["title/classes/FirebaseUserModel.html",[25,0.155,236,1.226]],["body/classes/FirebaseUserModel.html",[2,0.561,3,0.457,8,0.36,21,0.06,24,0.36,25,0.239,40,0.875,48,1.094,50,0.045,51,0.045,57,2.317,122,0.94,127,0.561,128,1.198,132,0.947,135,1.182,138,0.641,236,1.893,237,2.473,238,4.367,239,4.598,240,3.967,241,2.615,242,4.006,243,3.113,244,3.967,245,3.152,246,3.152,247,3.113,248,3.113,249,3.113,250,3.113]],["title/injectables/GetDataService.html",[149,0.557,206,1.226]],["body/injectables/GetDataService.html",[2,0.18,3,0.147,8,0.116,15,0.659,20,0.396,21,0.061,23,0.18,24,0.116,25,0.06,36,1.232,40,0.659,48,0.843,50,0.019,51,0.019,52,0.466,77,0.943,122,1.141,123,1.674,127,0.18,128,0.51,130,0.664,132,0.476,135,1.046,137,1.361,138,0.515,139,1.103,143,1.322,147,1.748,149,0.476,152,1.433,154,2.039,155,0.51,161,1.592,184,2.065,206,1.232,213,1.862,217,0.659,220,0.794,224,1.343,226,1.343,228,1.343,230,1.343,232,1.343,234,1.343,241,1.114,242,2.902,251,3.292,252,0.794,253,1.69,254,1.114,255,1.343,256,1.343,257,1.69,258,1.69,259,1.69,260,3.215,261,1.343,262,1.69,263,2.582,264,2.582,265,2.582,266,2.582,267,2.582,268,1.69,269,1.69,270,1,271,2.051,272,2.582,273,3.133,274,1.69,275,2.196,276,1.343,277,2.787,278,1.343,279,1.343,280,2.051,281,1.69,282,1.69,283,4.508,284,1,285,2.051,286,3.508,287,1.69,288,1.69,289,2.051,290,2.582,291,1.69,292,1,293,3.984,294,1.69,295,1.69,296,4.797,297,3.984,298,3.165,299,3.984,300,1.69,301,1,302,2.051,303,1.343,304,2.065,305,2.196,306,2.196,307,1.69,308,1.69,309,1.69,310,1.69,311,1,312,2.582,313,1.69,314,1.69,315,1,316,3.653,317,1.69,318,1,319,3.133,320,2.582,321,2.051,322,1.69,323,1.69,324,4.426,325,2.489,326,1.69,327,1.69,328,1,329,1.69,330,1,331,4.544,332,1.702,333,1,334,3.508,335,1,336,1,337,1.69,338,1,339,1,340,1,341,2.582,342,2.196,343,1.69,344,2.582,345,2.051,346,2.196,347,2.582,348,2.582,349,1.69,350,1,351,3.337,352,3.337,353,2.196,354,2.196,355,2.196,356,1,357,1,358,1,359,1.69,360,1,361,1,362,1,363,1,364,1,365,1.69,366,1.69,367,2.582,368,1.69,369,1,370,1.69,371,1,372,1,373,3.508,374,1.69,375,1,376,1.69,377,1,378,1,379,1,380,1.69,381,1]],["title/components/LoginComponent.html",[0,0.463,44,0.776]],["body/components/LoginComponent.html",[0,0.817,1,0.674,2,0.403,3,0.328,4,1.246,5,1.246,6,1.246,7,1.246,8,0.258,10,1.246,13,2.457,14,1.513,16,1.769,18,1.769,20,0.665,21,0.06,23,0.403,24,0.258,25,0.134,34,0.915,35,1.769,36,1.513,37,1.769,38,1.915,39,1.246,40,0.665,41,1.246,42,0.574,43,1.246,44,1.212,45,2.239,46,1.246,47,0.574,48,0.982,49,1.246,50,0.036,51,0.036,52,0.572,62,1.719,73,0.915,95,1.471,122,0.957,127,0.403,128,0.957,129,1.3,130,0.815,132,0.8,134,2.664,135,1.09,137,0.674,138,0.465,139,0.674,140,1.511,143,1.113,145,1.93,152,1.117,153,1.065,154,1.065,159,2.929,173,3.498,174,2.645,175,2.902,178,2.645,181,2.645,188,2.43,213,2.057,382,1.774,383,4.775,384,3.687,385,3.171,386,4.013,387,4.013,388,4.013,389,1.774,390,2.233,391,2.233,392,2.233,393,2.233,394,2.233,395,2.233,396,2.233,397,2.233,398,2.089,399,2.089,400,2.519]],["title/components/UserComponent.html",[0,0.463,47,0.661]],["body/components/UserComponent.html",[0,0.8,1,0.629,2,0.376,3,0.306,4,1.162,5,1.162,6,1.162,7,1.162,8,0.241,10,1.162,13,2.4,14,1.692,16,1.683,18,1.683,20,0.744,21,0.06,23,0.376,24,0.241,25,0.125,28,1.655,31,1.655,32,2.396,34,0.854,35,1.683,36,1.439,37,1.683,38,1.855,39,1.162,40,0.639,41,1.162,42,0.536,43,1.162,44,0.629,45,2.169,46,1.162,47,1,48,1.062,49,1.162,50,0.034,51,0.034,52,0.701,62,1.696,73,0.854,95,1.373,122,0.911,127,0.376,128,0.911,129,1.454,130,0.776,132,0.843,134,1.683,135,1.061,137,0.629,138,0.52,139,0.629,140,1.454,143,0.911,145,1.691,151,1.439,152,1.249,154,1.439,155,0.911,184,1.373,200,2.817,204,3.088,213,1.978,236,2.053,245,1.655,246,1.655,260,1.373,298,2.817,304,1.988,321,2.396,332,1.373,389,1.655,398,1.988,399,1.988,400,2.396,401,1.655,402,3.546,403,3.016,404,4.302,405,3.088,406,3.888,407,4.703,408,3.016,409,2.083,410,3.016,411,2.083,412,2.083,413,1.655,414,1.655,415,2.083,416,3.546,417,2.083,418,2.083,419,2.083,420,2.083,421,2.083,422,2.083,423,2.396,424,3.016,425,2.083,426,2.083,427,3.016,428,2.083,429,2.083,430,2.083,431,2.083,432,2.083,433,2.083,434,2.083,435,2.083,436,1.655]],["title/guards/UserResolver.html",[91,1.694,120,1.226]],["body/guards/UserResolver.html",[2,0.519,3,0.423,8,0.333,20,0.805,21,0.06,23,0.519,24,0.333,25,0.173,40,0.68,48,0.625,50,0.043,51,0.043,63,1.707,73,1.181,91,2.486,96,2.288,120,1.374,127,0.519,128,0.87,129,1.181,130,0.97,132,0.625,133,2.288,134,2.703,135,0.97,137,1.139,138,0.554,139,1.139,143,1.399,144,2.105,146,2.491,148,1.607,149,0.818,151,1.374,153,1.374,154,1.374,155,1.139,156,1.607,157,2.288,161,1.374,188,1.898,191,2.288,236,1.8,405,2.288,414,2.288,423,2.997,437,2.88,438,2.88,439,3.773,440,4.465,441,2.88,442,4.208,443,2.88,444,3.773,445,2.88,446,2.88,447,2.88,448,3.773,449,3.773,450,2.997,451,2.88,452,2.88]],["title/injectables/UserService.html",[63,0.906,149,0.557]],["body/injectables/UserService.html",[2,0.495,3,0.403,8,0.318,20,0.741,21,0.06,23,0.495,24,0.318,25,0.165,38,1.309,40,0.495,48,1.095,50,0.041,51,0.041,52,0.741,63,1.287,79,2.18,122,1.103,123,2.176,126,1.125,127,0.495,128,1.103,129,1.498,130,0.94,132,0.595,135,1.056,137,0.828,138,0.536,139,0.828,140,1.498,142,1.808,143,1.24,144,2.444,145,1.498,146,2.038,147,2.038,148,2.292,149,0.891,152,0.967,153,1.309,155,0.828,156,1.531,183,2.18,254,2.408,271,3.727,276,3.263,277,3.263,278,3.263,279,3.263,280,3.912,450,2.18,453,2.18,454,4.38,455,2.744,456,2.744,457,4.38,458,2.744,459,2.744,460,2.744,461,2.744]],["title/coverage.html",[462,2.778]],["body/coverage.html",[0,0.852,1,1.015,8,0.389,9,2.669,21,0.059,25,0.202,42,0.864,44,1.015,47,0.864,50,0.047,51,0.047,62,1.184,63,1.184,84,2.743,138,0.493,149,0.981,155,1.015,163,2.669,198,2.669,206,1.603,236,1.603,237,2.669,251,2.669,252,2.669,325,2.669,345,3.592,382,2.669,401,2.669,436,3.859,453,2.669,462,2.669,463,3.36,464,3.36,465,4.522,466,3.36,467,3.36,468,3.36,469,3.36,470,3.36,471,3.36,472,3.36,473,3.36,474,3.36,475,2.669,476,2.743,477,2.669,478,3.36,479,3.36]],["title/dependencies.html",[54,1.723,480,2.152]],["body/dependencies.html",[21,0.06,23,0.626,50,0.048,51,0.048,54,1.936,69,3.373,70,2.798,73,1.423,77,1.936,87,2.757,88,2.757,98,2.757,126,1.423,413,2.757,481,3.47,482,3.47,483,3.47,484,4.246,485,5.1,486,3.47,487,3.47,488,3.47,489,3.47,490,3.47,491,3.47,492,3.47,493,3.47,494,3.47,495,3.47,496,3.47,497,3.47,498,3.47,499,3.47,500,3.47]],["title/index.html",[127,0.388,501,1.709,502,1.709]],["body/index.html",[0,0.799,3,0.371,8,0.4,14,1.205,15,1.664,20,0.455,21,0.052,24,0.292,25,0.152,40,0.455,42,0.889,47,0.65,50,0.039,51,0.039,57,1.205,66,1.409,77,2.197,123,2.394,124,2.006,126,1.416,130,0.889,132,0.548,138,0.371,140,1.736,145,1.416,151,1.205,155,0.763,174,1.664,175,1.664,178,1.664,181,1.664,206,2.277,209,3.523,210,3.129,215,2.006,216,2.006,217,1.664,241,1.664,254,1.664,255,2.006,256,2.006,261,2.006,285,3.129,304,2.595,398,2.79,399,2.595,501,2.006,502,2.006,503,2.526,504,2.526,505,3.455,506,4.234,507,3.938,508,3.938,509,2.526,510,2.526,511,2.526,512,2.526,513,2.526,514,2.526,515,2.526,516,2.526,517,2.526,518,2.526,519,2.526,520,3.455,521,3.455,522,2.526,523,2.526,524,2.526,525,2.526,526,3.455,527,2.526,528,2.526,529,2.526,530,2.526,531,2.526,532,2.526,533,2.526,534,2.526,535,3.455,536,3.938,537,2.526,538,2.526,539,3.455,540,2.526,541,3.455,542,4.578,543,2.526,544,2.526,545,2.526,546,2.526,547,2.526,548,2.526,549,2.526,550,2.526,551,2.526,552,4.434,553,2.526,554,2.526,555,2.526,556,2.526,557,2.526,558,2.526,559,2.006,560,3.455,561,2.526,562,2.526,563,2.526,564,2.526,565,3.938,566,2.526,567,2.526,568,2.526,569,2.526,570,2.526,571,2.526,572,2.526]],["title/modules.html",[52,0.63]],["body/modules.html",[21,0.053,50,0.053,51,0.053,52,0.729,53,2.256,70,2.666,573,4.045,574,4.045,575,4.045]],["title/overview.html",[576,2.778]],["body/overview.html",[0,0.606,1,1.515,21,0.058,24,0.389,25,0.202,34,1.377,42,1.163,44,1.365,47,1.163,50,0.047,51,0.047,52,0.75,53,2.927,54,1.875,55,2.669,56,2.669,57,1.603,58,2.669,59,2.669,60,2.669,61,2.669,62,1.593,63,1.593,64,3.307,65,2.669,66,1.875,120,1.603,149,0.729,289,3.307,303,2.669,576,2.669,577,3.36,578,3.36]],["title/miscellaneous/variables.html",[476,2.035,579,1.709]],["body/miscellaneous/variables.html",[21,0.059,50,0.048,51,0.048,84,3.294,118,2.78,126,1.434,127,0.631,138,0.626,260,2.812,302,3.808,332,2.812,475,2.78,476,2.306,477,2.78,559,3.39,579,2.78,580,3.499,581,3.499,582,3.499,583,3.499,584,3.499,585,3.499,586,3.499,587,4.604,588,3.499,589,3.499,590,3.499,591,3.499,592,3.499,593,3.499,594,3.499,595,3.499,596,3.499,597,3.499]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":345,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["0.8.26",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":289,"title":{},"body":{"injectables/GetDataService.html":{},"overview.html":{}}}],["100",{"_index":436,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["14/14",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":303,"title":{},"body":{"injectables/GetDataService.html":{},"overview.html":{}}}],["2.5.4",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["212121",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":434,"title":{},"body":{"components/UserComponent.html":{}}}],["3",{"_index":578,"title":{},"body":{"overview.html":{}}}],["3/4",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":577,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["5.0.2",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["5.5.4",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["528303106160",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["6.2.5",{"_index":510,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["7034e",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.appspot.com",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.firebaseapp.com",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7034e.firebaseio.com",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["_addusertomap",{"_index":268,"title":{},"body":{"injectables/GetDataService.html":{}}}],["_addusertomap(valu",{"_index":282,"title":{},"body":{"injectables/GetDataService.html":{}}}],["_test",{"_index":203,"title":{},"body":{"components/DashboardComponent.html":{}}}],["access",{"_index":511,"title":{},"body":{"index.html":{}}}],["account",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["activatedrout",{"_index":406,"title":{},"body":{"components/UserComponent.html":{}}}],["activatedroutesnapshot",{"_index":440,"title":{},"body":{"guards/UserResolver.html":{}}}],["actual_compon",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["ad",{"_index":290,"title":{},"body":{"injectables/GetDataService.html":{}}}],["add",{"_index":285,"title":{},"body":{"injectables/GetDataService.html":{},"index.html":{}}}],["af",{"_index":275,"title":{},"body":{"injectables/GetDataService.html":{}}}],["afauth",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["afd",{"_index":272,"title":{},"body":{"injectables/GetDataService.html":{}}}],["ag",{"_index":295,"title":{},"body":{"injectables/GetDataService.html":{}}}],["aizasycgdmhp1rn511loqgxeseeebefawek",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alreadi",{"_index":287,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angular",{"_index":507,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":413,"title":{},"body":{"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire/databas",{"_index":338,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angular/fire/firestor",{"_index":339,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angular/flex",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"dependencies.html":{}}}],["angularefirestor",{"_index":276,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["angularfire2",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/GetDataService.html":{},"dependencies.html":{},"index.html":{}}}],["angularfire2/auth",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfire2/databas",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/firestor",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["angularfireauth",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfireauthmodul",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabas",{"_index":273,"title":{},"body":{"injectables/GetDataService.html":{}}}],["angularfiredatabasemodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":271,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["angularfirestoremodul",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":256,"title":{},"body":{"injectables/GetDataService.html":{},"index.html":{}}}],["apikey",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["app.compon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":532,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arial",{"_index":429,"title":{},"body":{"components/UserComponent.html":{}}}],["artifact",{"_index":553,"title":{},"body":{"index.html":{}}}],["attribut",{"_index":304,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{},"index.html":{}}}],["authdomain",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authent",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["authguard",{"_index":93,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{}}}],["authservic",{"_index":62,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automat",{"_index":547,"title":{},"body":{"index.html":{}}}],["averag",{"_index":294,"title":{},"body":{"injectables/GetDataService.html":{}}}],["background",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["bar",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["basic",{"_index":524,"title":{},"body":{"index.html":{}}}],["beta.18",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["black",{"_index":430,"title":{},"body":{"components/UserComponent.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":575,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":552,"title":{},"body":{"index.html":{}}}],["call",{"_index":535,"title":{},"body":{"index.html":{}}}],["callback",{"_index":296,"title":{},"body":{"injectables/GetDataService.html":{}}}],["callback(err",{"_index":352,"title":{},"body":{"injectables/GetDataService.html":{}}}],["callback(new",{"_index":365,"title":{},"body":{"injectables/GetDataService.html":{}}}],["callback(nul",{"_index":351,"title":{},"body":{"injectables/GetDataService.html":{}}}],["canactiv",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["chang",{"_index":261,"title":{},"body":{"injectables/GetDataService.html":{},"index.html":{}}}],["chart",{"_index":235,"title":{},"body":{"components/DashboardComponent.html":{}}}],["check",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["class",{"_index":25,"title":{"classes/FirebaseUserModel.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classement",{"_index":373,"title":{},"body":{"injectables/GetDataService.html":{}}}],["clean",{"_index":513,"title":{},"body":{"index.html":{}}}],["cli",{"_index":508,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":278,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["cluster_appmodul",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":549,"title":{},"body":{"index.html":{}}}],["col_diagnost",{"_index":264,"title":{},"body":{"injectables/GetDataService.html":{}}}],["col_post",{"_index":265,"title":{},"body":{"injectables/GetDataService.html":{}}}],["col_upvot",{"_index":266,"title":{},"body":{"injectables/GetDataService.html":{}}}],["col_usersinfo",{"_index":267,"title":{},"body":{"injectables/GetDataService.html":{}}}],["collect",{"_index":334,"title":{},"body":{"injectables/GetDataService.html":{}}}],["color",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["command",{"_index":540,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component'",{"_index":530,"title":{},"body":{"index.html":{}}}],["component_templ",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["configur",{"_index":531,"title":{},"body":{"index.html":{}}}],["connect",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["consol",{"_index":212,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.error(err",{"_index":221,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log('logout",{"_index":422,"title":{},"body":{"components/UserComponent.html":{}}}],["console.log('test",{"_index":218,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(err",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(r",{"_index":222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["const",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"components/UserComponent.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["constructor(af",{"_index":270,"title":{},"body":{"injectables/GetDataService.html":{}}}],["constructor(afauth",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservic",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["constructor(db",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(getdataservic",{"_index":205,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(priv",{"_index":217,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"index.html":{}}}],["constructor(publ",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["constructor(userservic",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}}}],["contribut",{"_index":572,"title":{},"body":{"index.html":{}}}],["core",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["core/auth.guard",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["core/auth.servic",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["core/user.model",{"_index":414,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["core/user.servic",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"guards/UserResolver.html":{}}}],["coverag",{"_index":462,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":241,"title":{},"body":{"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"index.html":{}}}],["current",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["dashboard",{"_index":199,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["dashboard.component.css",{"_index":201,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":202,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":42,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["data",{"_index":416,"title":{},"body":{"components/UserComponent.html":{}}}],["data.servic",{"_index":216,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["data.service.t",{"_index":252,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["data.service.ts:103",{"_index":330,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:125",{"_index":328,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:144",{"_index":311,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:165",{"_index":315,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:186",{"_index":318,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:20",{"_index":336,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:204",{"_index":284,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:25",{"_index":335,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:30",{"_index":333,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:35",{"_index":274,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:49",{"_index":292,"title":{},"body":{"injectables/GetDataService.html":{}}}],["data.service.ts:73",{"_index":301,"title":{},"body":{"injectables/GetDataService.html":{}}}],["databas",{"_index":254,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["databaseurl",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":280,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["declar",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":332,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["depend",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["dev",{"_index":544,"title":{},"body":{"index.html":{}}}],["develop",{"_index":526,"title":{},"body":{"index.html":{}}}],["diagnost",{"_index":312,"title":{},"body":{"injectables/GetDataService.html":{}}}],["differ",{"_index":255,"title":{},"body":{"injectables/GetDataService.html":{},"index.html":{}}}],["direct",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":551,"title":{},"body":{"index.html":{}}}],["directori",{"_index":556,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":410,"title":{},"body":{"components/UserComponent.html":{}}}],["dist",{"_index":555,"title":{},"body":{"index.html":{}}}],["docteur",{"_index":424,"title":{},"body":{"components/UserComponent.html":{}}}],["document",{"_index":325,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["document'",{"_index":323,"title":{},"body":{"injectables/GetDataService.html":{}}}],["dofacebooklogin",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["dogooglelogin",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["dologout",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["dotwitterlogin",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["dynam",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":320,"title":{},"body":{"injectables/GetDataService.html":{}}}],["easili",{"_index":514,"title":{},"body":{"index.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["encapsul",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["entri",{"_index":347,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry.get('ag",{"_index":350,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry.get('sex",{"_index":356,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry_ag",{"_index":349,"title":{},"body":{"injectables/GetDataService.html":{}}}],["entry_gend",{"_index":355,"title":{},"body":{"injectables/GetDataService.html":{}}}],["environ",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"guards/UserResolver.html":{}}}],["error",{"_index":298,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{}}}],["error('no",{"_index":366,"title":{},"body":{"injectables/GetDataService.html":{}}}],["exampl",{"_index":536,"title":{},"body":{"index.html":{}}}],["execut",{"_index":561,"title":{},"body":{"index.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":571,"title":{},"body":{"index.html":{}}}],["facebook",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["fals",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["famili",{"_index":428,"title":{},"body":{"components/UserComponent.html":{}}}],["feel",{"_index":568,"title":{},"body":{"index.html":{}}}],["femm",{"_index":358,"title":{},"body":{"injectables/GetDataService.html":{}}}],["ffffff",{"_index":425,"title":{},"body":{"components/UserComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["firebas",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebase.auth().currentus",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth().onauthstatechanged(funct",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.firestore.collectionrefer",{"_index":360,"title":{},"body":{"injectables/GetDataService.html":{}}}],["firebase.firestore.queri",{"_index":361,"title":{},"body":{"injectables/GetDataService.html":{}}}],["firebase/app",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["firebaseusermodel",{"_index":236,"title":{"classes/FirebaseUserModel.html":{}},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"coverage.html":{}}}],["firestor",{"_index":279,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":297,"title":{},"body":{"injectables/GetDataService.html":{}}}],["flag",{"_index":558,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["folder",{"_index":529,"title":{},"body":{"index.html":{}}}],["font",{"_index":427,"title":{},"body":{"components/UserComponent.html":{}}}],["free",{"_index":569,"title":{},"body":{"index.html":{}}}],["further",{"_index":564,"title":{},"body":{"index.html":{}}}],["gener",{"_index":506,"title":{},"body":{"index.html":{}}}],["get",{"_index":501,"title":{"index.html":{}},"body":{"index.html":{}}}],["getaverageag",{"_index":269,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getaverageage(callback",{"_index":291,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getaveragegend",{"_index":224,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getaveragegender(callback",{"_index":300,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getcurrentus",{"_index":454,"title":{},"body":{"injectables/UserService.html":{}}}],["getdataservic",{"_index":206,"title":{"injectables/GetDataService.html":{}},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"coverage.html":{},"index.html":{}}}],["getmostdiagnosticsus",{"_index":232,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getmostdiagnosticsusers(callback",{"_index":310,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getmostpostsus",{"_index":230,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getmostpostsusers(callback",{"_index":314,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getmostupvot",{"_index":234,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getmostupvotes(callback",{"_index":317,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getpostbyid",{"_index":228,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getpostbyid(id",{"_index":327,"title":{},"body":{"injectables/GetDataService.html":{}}}],["getuserbyid",{"_index":226,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["getuserbyid(id",{"_index":329,"title":{},"body":{"injectables/GetDataService.html":{}}}],["go",{"_index":566,"title":{},"body":{"index.html":{}}}],["googl",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["guard",{"_index":120,"title":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{},"overview.html":{}}}],["guid",{"_index":527,"title":{},"body":{"index.html":{}}}],["height",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":565,"title":{},"body":{"index.html":{}}}],["homm",{"_index":357,"title":{},"body":{"injectables/GetDataService.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["http://dsi",{"_index":445,"title":{},"body":{"guards/UserResolver.html":{}}}],["http://localhost:4200",{"_index":546,"title":{},"body":{"index.html":{}}}],["https://loginang",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'v",{"_index":523,"title":{},"body":{"index.html":{}}}],["id",{"_index":324,"title":{},"body":{"injectables/GetDataService.html":{}}}],["identifi",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":239,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["implement",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"index.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["increment",{"_index":288,"title":{},"body":{"injectables/GetDataService.html":{}}}],["index",{"_index":127,"title":{"index.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":520,"title":{},"body":{"index.html":{}}}],["inject",{"_index":149,"title":{"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["interact",{"_index":253,"title":{},"body":{"injectables/GetDataService.html":{}}}],["it'",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["js",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":563,"title":{},"body":{"index.html":{}}}],["key",{"_index":286,"title":{},"body":{"injectables/GetDataService.html":{}}}],["kimi",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["layout",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"overview.html":{}}}],["librari",{"_index":504,"title":{},"body":{"index.html":{}}}],["link",{"_index":519,"title":{},"body":{"index.html":{}}}],["locat",{"_index":407,"title":{},"body":{"components/UserComponent.html":{}}}],["log",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["login",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login.component.html",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.scss",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["loginang",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincompon",{"_index":44,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":404,"title":{},"body":{"components/UserComponent.html":{}}}],["man",{"_index":309,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map",{"_index":283,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map.get(valu",{"_index":381,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map.has(valu",{"_index":379,"title":{},"body":{"injectables/GetDataService.html":{}}}],["map.set(valu",{"_index":380,"title":{},"body":{"injectables/GetDataService.html":{}}}],["margin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maticonmodul",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["mean",{"_index":259,"title":{},"body":{"injectables/GetDataService.html":{}}}],["messagingsenderid",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["method",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["miscellan",{"_index":579,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":238,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["modifi",{"_index":533,"title":{},"body":{"index.html":{}}}],["modul",{"_index":52,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"modules.html":{},"overview.html":{}}}],["modular",{"_index":516,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["monitoring\\src\\environments\\environment.t",{"_index":534,"title":{},"body":{"index.html":{}}}],["more",{"_index":539,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navig",{"_index":545,"title":{},"body":{"index.html":{}}}],["nb",{"_index":346,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_f",{"_index":353,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_femm",{"_index":305,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_homm",{"_index":306,"title":{},"body":{"injectables/GetDataService.html":{}}}],["nb_m",{"_index":354,"title":{},"body":{"injectables/GetDataService.html":{}}}],["new",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":542,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":204,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserComponent.html":{}}}],["null",{"_index":331,"title":{},"body":{"injectables/GetDataService.html":{}}}],["number",{"_index":293,"title":{},"body":{"injectables/GetDataService.html":{}}}],["object",{"_index":302,"title":{},"body":{"injectables/GetDataService.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":258,"title":{},"body":{"injectables/GetDataService.html":{}}}],["offici",{"_index":503,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":200,"title":{},"body":{"components/DashboardComponent.html":{},"components/UserComponent.html":{}}}],["option",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["order",{"_index":521,"title":{},"body":{"index.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":262,"title":{},"body":{"injectables/GetDataService.html":{}}}],["overview",{"_index":576,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":480,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["panel",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/UserComponent.html":{}}}],["param",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["paramet",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["password",{"_index":443,"title":{},"body":{"guards/UserResolver.html":{}}}],["pic",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pictur",{"_index":246,"title":{},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{}}}],["post",{"_index":316,"title":{},"body":{"injectables/GetDataService.html":{}}}],["power",{"_index":512,"title":{},"body":{"index.html":{}}}],["print",{"_index":211,"title":{},"body":{"components/DashboardComponent.html":{}}}],["privat",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["prod",{"_index":557,"title":{},"body":{"index.html":{}}}],["product",{"_index":559,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":245,"title":{},"body":{"classes/FirebaseUserModel.html":{},"components/UserComponent.html":{}}}],["project",{"_index":505,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promis",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["promise((resolv",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["properti",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["provid",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/FirebaseUserModel.html":{},"index.html":{},"overview.html":{}}}],["providedin",{"_index":340,"title":{},"body":{"injectables/GetDataService.html":{}}}],["provider.addscope('email",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["provider.addscope('profil",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["public",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["queri",{"_index":277,"title":{},"body":{"injectables/GetDataService.html":{},"injectables/UserService.html":{}}}],["query.limit(1",{"_index":363,"title":{},"body":{"injectables/GetDataService.html":{}}}],["query.where('userid",{"_index":362,"title":{},"body":{"injectables/GetDataService.html":{}}}],["quick",{"_index":518,"title":{},"body":{"index.html":{}}}],["re",{"_index":220,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{}}}],["reactiveformsmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":567,"title":{},"body":{"index.html":{}}}],["real",{"_index":281,"title":{},"body":{"injectables/GetDataService.html":{}}}],["ref",{"_index":359,"title":{},"body":{"injectables/GetDataService.html":{}}}],["reject",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["reject('no",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["reject(err",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"guards/UserResolver.html":{}}}],["reload",{"_index":548,"title":{},"body":{"index.html":{}}}],["repres",{"_index":321,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{}}}],["reprsent",{"_index":244,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["res.displaynam",{"_index":448,"title":{},"body":{"guards/UserResolver.html":{}}}],["res.photourl",{"_index":451,"title":{},"body":{"guards/UserResolver.html":{}}}],["res.providerdata[0].providerid",{"_index":442,"title":{},"body":{"guards/UserResolver.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolv",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["resolve(fals",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(r",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(rout",{"_index":439,"title":{},"body":{"guards/UserResolver.html":{}}}],["resolve(tru",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["resolve(us",{"_index":450,"title":{},"body":{"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["respect",{"_index":307,"title":{},"body":{"injectables/GetDataService.html":{}}}],["result",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["reus",{"_index":570,"title":{},"body":{"index.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/GetDataService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["rootrouterconfig",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["rout",{"_index":405,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["routedata['data",{"_index":417,"title":{},"body":{"components/UserComponent.html":{}}}],["router",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["routermodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(rootrouterconfig",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":209,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["rxj",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["san",{"_index":431,"title":{},"body":{"components/UserComponent.html":{}}}],["scaffold",{"_index":550,"title":{},"body":{"index.html":{}}}],["second",{"_index":299,"title":{},"body":{"injectables/GetDataService.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["send",{"_index":313,"title":{},"body":{"injectables/GetDataService.html":{}}}],["serif",{"_index":432,"title":{},"body":{"components/UserComponent.html":{}}}],["serv",{"_index":543,"title":{},"body":{"index.html":{}}}],["server",{"_index":541,"title":{},"body":{"index.html":{}}}],["servic",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["services/get",{"_index":215,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["set",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["signinwithpopup(provid",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["size",{"_index":433,"title":{},"body":{"components/UserComponent.html":{}}}],["somefunct",{"_index":537,"title":{},"body":{"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spinner",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.t",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app",{"_index":528,"title":{},"body":{"index.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/auth.guard.t",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.guard.ts:24",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.guard.ts:9",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/auth.service.t",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/auth.service.ts:15",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:22",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:40",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:59",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:79",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth.service.ts:9",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/user.model.t",{"_index":237,"title":{},"body":{"classes/FirebaseUserModel.html":{},"coverage.html":{}}}],["src/app/core/user.model.ts:13",{"_index":247,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.model.ts:18",{"_index":240,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.model.ts:8",{"_index":243,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["src/app/core/user.service.t",{"_index":453,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/user.service.ts:15",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:22",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/user.service.ts:9",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/login/login.component.t",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/get",{"_index":251,"title":{},"body":{"injectables/GetDataService.html":{},"coverage.html":{}}}],["src/app/user/dashboard/dashboard.component.t",{"_index":198,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:12",{"_index":207,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:21",{"_index":214,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/dashboard/dashboard.component.ts:27",{"_index":208,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/user/user.component.t",{"_index":401,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts:21",{"_index":408,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:30",{"_index":412,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:36",{"_index":411,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:49",{"_index":409,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.resolver.t",{"_index":437,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/app/user/user.resolver.ts:12",{"_index":441,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/app/user/user.resolver.ts:7",{"_index":438,"title":{},"body":{"guards/UserResolver.html":{}}}],["src/environments/environment.prod.t",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":502,"title":{"index.html":{}},"body":{"index.html":{}}}],["statement",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":554,"title":{},"body":{"index.html":{}}}],["string",{"_index":242,"title":{},"body":{"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["successfulli",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["support",{"_index":573,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":574,"title":{},"body":{"modules.html":{}}}],["system",{"_index":525,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["test",{"_index":210,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["that'",{"_index":257,"title":{},"body":{"injectables/GetDataService.html":{}}}],["then((r",{"_index":420,"title":{},"body":{"components/UserComponent.html":{}}}],["then(r",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"guards/UserResolver.html":{}}}],["then(us",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._addusertomap(entry.get('userid",{"_index":374,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afauth.auth",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afd.object('upvot",{"_index":377,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('diagnost",{"_index":371,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('post",{"_index":368,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.afs.collection('usersinfo",{"_index":342,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.authservice.dofacebooklogin",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dogooglelogin",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.dologout",{"_index":419,"title":{},"body":{"components/UserComponent.html":{}}}],["this.authservice.dotwitterlogin",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.col_diagnost",{"_index":370,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_diagnostics.get().subscribe((us",{"_index":372,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_post",{"_index":367,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_posts.doc(id).valuechanges().subscribe((post",{"_index":369,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_posts.get().subscribe((us",{"_index":375,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_upvot",{"_index":376,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_upvotes.valuechanges().subscribe((r",{"_index":378,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_usersinfo",{"_index":341,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.col_usersinfo.get().subscribe((us",{"_index":343,"title":{},"body":{"injectables/GetDataService.html":{}}}],["this.getdataservice.getaverageage((err",{"_index":219,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getaveragegender((err",{"_index":223,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostdiagnosticsusers((err",{"_index":231,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostpostsusers((err",{"_index":229,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getmostupvotes((err",{"_index":233,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getpostbyid('3erbnah2xzu8b3ji2si8",{"_index":227,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.getuserbyid('dhaxx2isz3fbxes0vl9jszmxgy32",{"_index":225,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getdataservice.somemethod",{"_index":538,"title":{},"body":{"index.html":{}}}],["this.imag",{"_index":248,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.location.back",{"_index":421,"title":{},"body":{"components/UserComponent.html":{}}}],["this.nam",{"_index":249,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.provid",{"_index":250,"title":{},"body":{"classes/FirebaseUserModel.html":{}}}],["this.route.data.subscribe(routedata",{"_index":415,"title":{},"body":{"components/UserComponent.html":{}}}],["this.router.navigate(['/login",{"_index":452,"title":{},"body":{"guards/UserResolver.html":{}}}],["this.router.navigate(['/us",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.us",{"_index":418,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userservice.getcurrentus",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"guards/UserResolver.html":{}}}],["time",{"_index":263,"title":{},"body":{"injectables/GetDataService.html":{}}}],["total_ag",{"_index":344,"title":{},"body":{"injectables/GetDataService.html":{}}}],["transpar",{"_index":426,"title":{},"body":{"components/UserComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["tri",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tryfacebooklogin",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{}}}],["trygooglelogin",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytwitterlogin",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{}}}],["twitter",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["type",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":515,"title":{},"body":{"index.html":{}}}],["unit",{"_index":560,"title":{},"body":{"index.html":{}}}],["upvot",{"_index":319,"title":{},"body":{"injectables/GetDataService.html":{}}}],["us",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/GetDataService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["usehash",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"classes/FirebaseUserModel.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{}}}],["user.component.html",{"_index":403,"title":{},"body":{"components/UserComponent.html":{}}}],["user.imag",{"_index":444,"title":{},"body":{"guards/UserResolver.html":{}}}],["user.nam",{"_index":423,"title":{},"body":{"components/UserComponent.html":{},"guards/UserResolver.html":{}}}],["user.provid",{"_index":449,"title":{},"body":{"guards/UserResolver.html":{}}}],["user.scss",{"_index":402,"title":{},"body":{"components/UserComponent.html":{}}}],["user.servic",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["user/dashboard/dashboard.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.compon",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.resolv",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["usercompon",{"_index":47,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["userid",{"_index":326,"title":{},"body":{"injectables/GetDataService.html":{}}}],["userresolv",{"_index":91,"title":{"guards/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/UserResolver.html":{}}}],["users.doc",{"_index":348,"title":{},"body":{"injectables/GetDataService.html":{}}}],["userservic",{"_index":63,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"guards/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersinfo",{"_index":337,"title":{},"body":{"injectables/GetDataService.html":{}}}],["valu",{"_index":260,"title":{},"body":{"injectables/GetDataService.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["valuechanges().subscribe((us",{"_index":364,"title":{},"body":{"injectables/GetDataService.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{},"injectables/UserService.html":{}}}],["variabl",{"_index":476,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["vd.github.io/patternlab",{"_index":446,"title":{},"body":{"guards/UserResolver.html":{}}}],["vd/images/fpo_avatar.png",{"_index":447,"title":{},"body":{"guards/UserResolver.html":{}}}],["version",{"_index":509,"title":{},"body":{"index.html":{}}}],["via",{"_index":562,"title":{},"body":{"index.html":{}}}],["viewencapsul",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.non",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":213,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/GetDataService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["want",{"_index":517,"title":{},"body":{"index.html":{}}}],["width",{"_index":435,"title":{},"body":{"components/UserComponent.html":{}}}],["woman",{"_index":308,"title":{},"body":{"injectables/GetDataService.html":{}}}],["yourself",{"_index":522,"title":{},"body":{"index.html":{}}}],["zone",{"_index":322,"title":{},"body":{"injectables/GetDataService.html":{}}}],["zone.j",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                * {\n  margin: 0px;\n}\n.app-panel{\n  height: 100vh;\n  background-color: #212121;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                DashboardComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                UserComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { rootRouterConfig } from './app.routes';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from '../environments/environment';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { UserResolver } from './user/user.resolver';\nimport { AuthGuard } from './core/auth.guard';\nimport { AuthService } from './core/auth.service';\nimport { UserService } from './core/user.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './user/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(rootRouterConfig, { useHash: false }),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n  ],\n  providers: [AuthService, UserService, UserResolver, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard use to check if the user is connected to Firebase\n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The user service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.guard.ts:24\n                            \n                        \n\n\n                \n                    \n                            Check if the user is logged in\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    a promise if the user is authenticated the promise is resolved else it's rejected\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {UserService} from './user.service';\n\n/**\n * Guard use to check if the user is connected to Firebase\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * constructor\n   * @param userService The user service\n   * @param router The router module\n   */\n  constructor(public userService: UserService,\n              private router: Router) {\n  }\n\n  /**\n   * Check if the user is logged in\n   * @return a promise if the user is authenticated the promise is resolved else it's rejected\n   */\n  canActivate(): Promise {\n    return new Promise((resolve, reject) => {\n      this.userService.getCurrentUser()\n        .then(user => {\n          this.router.navigate(['/user']);\n          return resolve(false);\n        }, err => {\n          return resolve(true);\n        });\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service use to authenticate a user to Firebase\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFacebookLogin\n                            \n                            \n                                doGoogleLogin\n                            \n                            \n                                doLogout\n                            \n                            \n                                doTwitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The authentication module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doFacebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoFacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Facebook account\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully authenticated it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Google account\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully authenticated it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doLogout\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoLogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Try to log out the user\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully logged out it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doTwitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ndoTwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Twitter account\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user successfully authenticated it's resolved, if not it's rejected\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            afAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afAuth:     AngularFireAuth\n\n                    \n                \n                    \n                        \n                            Type :     AngularFireAuth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                        The authentication module\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\n\n/**\n * Service use to authenticate a user to Firebase\n */\n@Injectable()\nexport class AuthService {\n\n  /**\n   * constructor\n   * @param afAuth The authentication module\n   */\n  constructor(public afAuth: AngularFireAuth) {\n  }\n\n  /**\n   * Try to authenticate the user with a Facebook account\n   * @return a promise if the user successfully authenticated it's resolved, if not it's rejected\n   */\n  doFacebookLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.FacebookAuthProvider();\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Try to authenticate the user with a Twitter account\n   * @return a promise if the user successfully authenticated it's resolved, if not it's rejected\n   */\n  doTwitterLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.TwitterAuthProvider();\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n\n  /**\n   * Try to authenticate the user with a Google account\n   * @return a promise if the user successfully authenticated it's resolved, if not it's rejected\n   */\n  doGoogleLogin() {\n    return new Promise((resolve, reject) => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      provider.addScope('profile');\n      provider.addScope('email');\n      this.afAuth.auth\n        .signInWithPopup(provider)\n        .then(res => {\n          resolve(res);\n        }, err => {\n          console.log(err);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Try to log out the user\n   * @return a promise if the user successfully logged out it's resolved, if not it's rejected\n   */\n  doLogout() {\n    return new Promise((resolve, reject) => {\n      if (firebase.auth().currentUser) {\n        this.afAuth.auth.signOut();\n        resolve();\n      } else {\n        reject();\n      }\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/dashboard/dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        The dashboard component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _test\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(getDataService: GetDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/dashboard/dashboard.component.ts:12\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        getDataService\n                                                  \n                                                        \n                                                                    GetDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the GetDataService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _test\n                            \n                            \n                        \n                    \n                \n                \n                    \n_test()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/dashboard/dashboard.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Run tests and print the result on the console\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/dashboard/dashboard.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GetDataService} from '../../services/get-data.service';\n\n/**\n * The dashboard component\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  /**\n   * constructor\n   * @param getDataService the GetDataService\n   */\n  constructor(private getDataService: GetDataService) {\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Run tests and print the result on the console\n   */\n  _test() {\n    console.log('Tests :');\n    this.getDataService.getAverageAge((err, res) => {\n      console.log('Test getDataService ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getAverageGender((err, res) => {\n      console.log('Test getAverageGender ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getUserById('dhaXX2isz3fbXES0Vl9JszmXGY32', (err, res) => {\n      console.log('Test getUserById ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getPostById('3ERbnaH2XzU8B3JI2si8', (err, res) => {\n      console.log('Test getPostById ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostPostsUsers((err, res) => {\n      console.log('Test getMostPostsUsers ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostDiagnosticsUsers((err, res) => {\n      console.log('Test getMostDiagnosticsUsers ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n    this.getDataService.getMostUpvotes((err, res) => {\n      console.log('Test getMostUpvotes ->');\n      if (err) {\n        return console.error(err);\n      }\n      console.log(res);\n    });\n  }\n\n}\n\n    \n\n    \n        Charts\n\n  \n\n\n\n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Charts  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseUserModel.html":{"url":"classes/FirebaseUserModel.html","title":"class - FirebaseUserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseUserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.model.ts\n        \n\n            \n                Description\n            \n            \n                A user model\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                provider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.model.ts:18\n                            \n                        \n\n                \n                    \n                            Create a user model\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        image:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:8\n                            \n                        \n\n                \n                    \n                        Reprsent the profile picture of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:13\n                            \n                        \n\n                \n                    \n                        The name of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        provider:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.model.ts:18\n                            \n                        \n\n                \n                    \n                        The provider of the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FirebaseUserModel {\n  /**\n   * Reprsent the profile picture of the user\n   */\n  image: string;\n\n  /**\n   * The name of the user\n   */\n  name: string;\n\n  /**\n   * The provider of the user\n   */\n  provider: string;\n\n  /**\n   * Create a user model\n   */\n  constructor() {\n    this.image = '';\n    this.name = '';\n    this.provider = '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetDataService.html":{"url":"injectables/GetDataService.html","title":"injectable - GetDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GetDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/get-data.service.ts\n        \n\n            \n                Description\n            \n            \n                GetDataService is used for interacting with the database\nThe different method use the angularfire2 api, that's why every\nelement you get are Observable. It means that the value of the element\ncan change over time.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                col_diagnostics\n                            \n                            \n                                    Private\n                                col_posts\n                            \n                            \n                                    Private\n                                col_upvotes\n                            \n                            \n                                    Private\n                                col_usersInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _addUserToMap\n                            \n                            \n                                getAverageAge\n                            \n                            \n                                getAverageGender\n                            \n                            \n                                getMostDiagnosticsUsers\n                            \n                            \n                                getMostPostsUsers\n                            \n                            \n                                getMostUpvotes\n                            \n                            \n                                getPostById\n                            \n                            \n                                getUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, afd: AngularFireDatabase)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/get-data.service.ts:35\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngulareFirestore module used for querying the cloud firestore DB\n\n                                                        \n                                                \n                                                \n                                                        afd\n                                                  \n                                                        \n                                                                    AngularFireDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngularFireDatabase module used for querying the Real Time DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _addUserToMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _addUserToMap(value: string, map: Map)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:204\n                            \n                        \n\n\n                \n                    \n                            Add a key to a map if the key is already there increment it's value by 1\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The value to add\n\n                                                        \n                                                \n                                                \n                                                        map\n                                                        \n                                                                    Map\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The map where the value is added\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Map\n\n                            \n                                \n                                    the map with the added value\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAverageAge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAverageAge(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Get a number of the users average age\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAverageGender\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAverageGender(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Get an object with 2 attributes, nb_femme & nb_homme, respectively the number of woman and the number of man\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostDiagnosticsUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostDiagnosticsUsers(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:144\n                            \n                        \n\n\n                \n                    \n                            Get a map of the users as the key and the number of diagnostics send as the value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostPostsUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostPostsUsers(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:165\n                            \n                        \n\n\n                \n                    \n                            Get a map of the users as the key and the number of posts created as the value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMostUpvotes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMostUpvotes(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:186\n                            \n                        \n\n\n                \n                    \n                            Get upvotes as an object, each attributes represent a 'zones' document's id and each document have attributes\nthat represent userId and the number of upvotes as their value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                callback\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPostById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPostById(id: string, callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Get a post by it's document id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the post (document) to get\n\n                                                        \n                                                \n                                                \n                                                        callback\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserById(id: string, callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Get a user by it's id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The id of the user to get\n\n                                                        \n                                                \n                                                \n                                                        callback\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The first parameter of the callback is the error, the second is the value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            col_diagnostics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col_diagnostics:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:30\n                            \n                        \n\n                \n                    \n                        The 'diagnostics' collection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            col_posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col_posts:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:25\n                            \n                        \n\n                \n                    \n                        The 'posts' collection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            col_upvotes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col_upvotes:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:35\n                            \n                        \n\n                \n                    \n                        The 'upvotes' collection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            col_usersInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col_usersInfo:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/get-data.service.ts:20\n                            \n                        \n\n                \n                    \n                        The 'usersInfo' collection\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFireDatabase} from '@angular/fire/database';\nimport {AngularFirestore} from '@angular/fire/firestore';\n\n/**\n * GetDataService is used for interacting with the database\n * The different method use the angularfire2 api, that's why every\n * element you get are Observable. It means that the value of the element\n * can change over time.\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GetDataService {\n\n  /**\n   * The 'usersInfo' collection\n   */\n  private col_usersInfo = null;\n\n  /**\n   * The 'posts' collection\n   */\n  private col_posts = null;\n\n  /**\n   * The 'diagnostics' collection\n   */\n  private col_diagnostics = null;\n\n  /**\n   * The 'upvotes' collection\n   */\n  private col_upvotes = null;\n\n  /**\n   * constructor\n   * @param afs AngulareFirestore module used for querying the cloud firestore DB\n   * @param afd AngularFireDatabase module used for querying the Real Time DB\n   */\n  constructor(private afs: AngularFirestore, private afd: AngularFireDatabase) {\n  }\n\n  /**\n   * Get a number of the users average age\n   * @param callback  The first parameter of the callback is the error, the second is the value\n   */\n  getAverageAge(callback) {\n    if (this.col_usersInfo == null) {\n      this.col_usersInfo = this.afs.collection('usersInfos');\n    }\n    this.col_usersInfo.get().subscribe((users) => {\n      let total_age = 0;\n      let nb = 0;\n      let value;\n      for (const entry of users.docs) {\n        const entry_age = entry.get('age');\n        total_age = total_age + entry_age;\n        nb++;\n      }\n      value = total_age / nb;\n      return callback(null, value);\n    }, (err) => {\n      return callback(err);\n    });\n  }\n\n  /**\n   * Get an object with 2 attributes, nb_femme & nb_homme, respectively the number of woman and the number of man\n   * @param callback  The first parameter of the callback is the error, the second is the value\n   */\n  getAverageGender(callback) {\n    if (this.col_usersInfo == null) {\n      this.col_usersInfo = this.afs.collection('usersInfos');\n    }\n    this.col_usersInfo.get().subscribe((users) => {\n      let nb_f = 0;\n      let nb_m = 0;\n      for (const entry of users.docs) {\n        const entry_gender = entry.get('sexe');\n        if (entry_gender === 'homme') {\n          nb_m++;\n        }\n        if (entry_gender === 'femme') {\n          nb_f++;\n        }\n      }\n      callback(null, {\n        nb_femme: nb_f,\n        nb_homme: nb_m\n      });\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n  /**\n   * Get a user by it's id\n   * @param id The id of the user to get\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getUserById(id: string, callback) {\n    if (id) {\n      this.afs.collection('usersInfos', ref => {\n        let query: firebase.firestore.CollectionReference | firebase.firestore.Query = ref;\n        query = query.where('userId', '==', id);\n        query = query.limit(1);\n        return query;\n      }).valueChanges().subscribe((user) => {\n        return callback(null, user);\n      }, (err) => {\n        return callback(err);\n      });\n    } else {\n      callback(new Error('no id'));\n    }\n  }\n\n  /**\n   * Get a post by it's document id\n   * @param id The id of the post (document) to get\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getPostById(id: string, callback) {\n    if (id) {\n      if (this.col_posts == null) {\n        this.col_posts = this.afs.collection('posts');\n      }\n      this.col_posts.doc(id).valueChanges().subscribe((post) => {\n        return callback(null, post);\n      }, (err) => {\n        return callback(err);\n      });\n    } else {\n      callback(new Error('no id'));\n    }\n  }\n\n  /**\n   * Get a map of the users as the key and the number of diagnostics send as the value\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getMostDiagnosticsUsers(callback) {\n    if (this.col_diagnostics == null) {\n      this.col_diagnostics = this.afs.collection('diagnostics');\n    }\n    this.col_diagnostics.get().subscribe((users) => {\n      let classement = new Map();\n\n      for (const entry of users.docs) {\n        classement = this._addUserToMap(entry.get('userId'), classement);\n      }\n\n      callback(null, classement);\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n  /**\n   * Get a map of the users as the key and the number of posts created as the value\n   * @param callback The first parameter of the callback is the error, the second is the value\n   */\n  getMostPostsUsers(callback) {\n    if (this.col_posts == null) {\n      this.col_posts = this.afs.collection('posts');\n    }\n    this.col_posts.get().subscribe((users) => {\n      let classement = new Map();\n      for (const entry of users.docs) {\n        classement = this._addUserToMap(entry.get('userId'), classement);\n      }\n      callback(null, classement);\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n\n  /**\n   * Get upvotes as an object, each attributes represent a 'zones' document's id and each document have attributes\n   * that represent userId and the number of upvotes as their value\n   * @param callback callback\n   */\n  getMostUpvotes(callback) {\n    if (this.col_upvotes == null) {\n      this.col_upvotes = this.afd.object('upvotes');\n    }\n    this.col_upvotes.valueChanges().subscribe((res) => {\n      callback(null, res);\n    }, (err) => {\n      callback(err);\n    });\n  }\n\n\n  /**\n   * Add a key to a map if the key is already there increment it's value by 1\n   * @param value The value to add\n   * @param map The map where the value is added\n   * @return the map with the added value\n   */\n  private _addUserToMap(value: string, map: Map): Map {\n    if (map.has(value)) {\n      return map.set(value, map.get(value) + 1);\n    }\n    return map.set(value, 1);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        The login component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-login\n            \n\n            \n                styleUrls\n                login.scss\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tryFacebookLogin\n                            \n                            \n                                tryGoogleLogin\n                            \n                            \n                                tryTwitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Authentication service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryFacebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryFacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Facebook account\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryGoogleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryGoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Google account\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tryTwitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntryTwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Try to authenticate the user with a Twitter account\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The Authentication service\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {AuthService} from '../core/auth.service';\nimport {Router} from '@angular/router';\n\n/**\n * The login component\n */\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.scss']\n})\nexport class LoginComponent {\n\n  /**\n   * constructor\n   * @param authService The Authentication service\n   * @param router The router module\n   */\n  constructor(public authService: AuthService,\n              private router: Router) {\n  }\n\n  /**\n   * Try to authenticate the user with a Facebook account\n   */\n  tryFacebookLogin() {\n    this.authService.doFacebookLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  /**\n   * Try to authenticate the user with a Twitter account\n   */\n  tryTwitterLogin() {\n    this.authService.doTwitterLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n\n  /**\n   * Try to authenticate the user with a Google account\n   */\n  tryGoogleLogin() {\n    this.authService.doGoogleLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Kimi Monitoring\n          \n        \n        \n          \n            \n              settings\n            \n          \n        \n      \n    \n  \n  \n    \n      Login with Facebook\n    \n    \n      Login with Google\n    \n    \n      Login with Twitter\n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    login.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Kimi Monitoring                                                              settings                                                      Login with Facebook              Login with Google              Login with Twitter      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user.component.ts\n\n\n    \n        Description\n    \n    \n        The User component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-user\n            \n\n            \n                styleUrls\n                user.scss\n            \n\n\n\n            \n                templateUrl\n                user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The authentication service\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Router module\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Location module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Disconnected the user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:30\n                            \n                        \n\n                \n                    \n                        The authentication service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FirebaseUserModel\n\n                    \n                \n                    \n                        \n                            Type :     FirebaseUserModel\n\n                        \n                    \n                    \n                        \n                            Default value : new FirebaseUserModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n                \n                    \n                        This attribute represent the authenticated user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../core/auth.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\nimport {FirebaseUserModel} from '../core/user.model';\n\n/**\n * The User component\n */\n@Component({\n  selector: 'page-user',\n  templateUrl: 'user.component.html',\n  styleUrls: ['user.scss']\n})\n\nexport class UserComponent implements OnInit {\n\n  /**\n   * This attribute represent the authenticated user\n   */\n  user: FirebaseUserModel = new FirebaseUserModel();\n\n  /**\n   * constructor\n   * @param authService The authentication service\n   * @param route The Router module\n   * @param location The Location module\n   */\n  constructor(\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private location: Location) {\n\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      const data = routeData['data'];\n      if (data) {\n        this.user = data;\n      }\n    });\n  }\n\n\n  /**\n   * Disconnected the user\n   */\n  logout() {\n    this.authService.doLogout()\n      .then((res) => {\n        this.location.back();\n      }, (error) => {\n        console.log('Logout error', error);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              Kimi Monitoring\n            \n          \n          \n            \n              Logout\n            \n            \n              \n                settings\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              \n                \n                  {{user.name}}\n                \n                \n                  Docteur\n                \n              \n            \n          \n        \n      \n      \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    user.scss\n                \n                .app-user-panel{\n  color: #ffffff ;\n  background-color: transparent;\n  font-family: \"Arial Black\", sans-serif;\n  font-size: 2em;\n}\n\n.profile-picture{\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Kimi Monitoring                                                          Logout                                                      settings                                                                                                                                                            {{user.name}}                                                  Docteur                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'page-login'},{'name': 'UserComponent', 'selector': 'page-user'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserResolver.html":{"url":"guards/UserResolver.html","title":"guard - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/user/user.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.resolver.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {Resolve, ActivatedRouteSnapshot, Router} from '@angular/router';\nimport {UserService} from '../core/user.service';\nimport {FirebaseUserModel} from '../core/user.model';\n\n@Injectable()\nexport class UserResolver implements Resolve {\n\n  constructor(public userService: UserService, private router: Router) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot): Promise {\n\n    let user = new FirebaseUserModel();\n\n    return new Promise((resolve, reject) => {\n      this.userService.getCurrentUser()\n        .then(res => {\n          if (res.providerData[0].providerId == 'password') {\n            user.image = 'http://dsi-vd.github.io/patternlab-vd/images/fpo_avatar.png';\n            user.name = res.displayName;\n            user.provider = res.providerData[0].providerId;\n            return resolve(user);\n          } else {\n            user.image = res.photoURL;\n            user.name = res.displayName;\n            user.provider = res.providerData[0].providerId;\n            return resolve(user);\n          }\n        }, err => {\n          this.router.navigate(['/login']);\n          return reject(err);\n        });\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service use to get a user from the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            Get the current user\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngulareFirestore module used for querying the cloud firestore DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/user.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Get the current user\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    a promise if the user is authenticated the promise is resolved else it's rejected\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        db:     AngularFirestore\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/user.service.ts:15\n                            \n                        \n\n                \n                    \n                        AngulareFirestore module used for querying the cloud firestore DB\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {AngularFirestore} from 'angularfire2/firestore';\nimport * as firebase from 'firebase/app';\n\n/**\n * Service use to get a user from the database\n */\n@Injectable()\nexport class UserService {\n\n  /**\n   * Get the current user\n   * @param db AngulareFirestore module used for querying the cloud firestore DB\n   */\n  constructor(public db: AngularFirestore) {\n  }\n\n  /**\n   * Get the current user\n   * @return a promise if the user is authenticated the promise is resolved else it's rejected\n   */\n  getCurrentUser() {\n    return new Promise((resolve, reject) => {\n      var user = firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          resolve(user);\n        } else {\n          reject('No user logged in');\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/user.model.ts\n            \n            \n                class\n            \n            \n                FirebaseUserModel\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/get-data.service.ts\n            \n            \n                injectable\n            \n            \n                GetDataService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/user/dashboard/dashboard.component.ts\n            \n            \n                component\n            \n            \n                DashboardComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/user/user.component.ts\n            \n            \n                component\n            \n            \n                UserComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/flex-layout : ^6.0.0-beta.18\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            angularfire2 : ^5.0.2\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.5.4\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  Kimi Monitoring\n  The official library for Kimi Monitoring\n\n\n\nThis project was generated with Angular CLI version 6.2.5.\nWhat is Kimi Monitoring?\n\nAccess to Firebase - Use the power of AngularFire2.\nClean API - Easily understandable.\nModular - Just add the service you want to use.\n\nQuick links\nAbout angularFire2 - Get information about angularFire2\nUseful information\nIn order to use the service you have to authenticate yourself.\nI've implemented a basic authentication system.\nYou can use your Google, Facebook or Twitter account to do so.\nDeveloper Guide\nGetting started\nCreate a component in the src/app/ folder.\nThe GetDataService is provided in root. In order to\nuse it, just add an attribute with the type GetDataService to your component's constructor.\nTo configure this application for your Firebase database. You can\nmodify the Kimi-Monitoring\\src\\environments\\environment.ts file.\nTo use the service call a method on the getDataService attribute.\nExample:\nimport {GetDataService} from '../../services/get-data.service';\n\nexport class DashboardComponent {\n  //Add an attribute (getDataService) to your component\n  constructor(private getDataService: GetDataService) {}\n\n  someFunction(){\n    //Call a getDataService method\n    this.getDataService.someMethod();\n  }\n}More Example : The DashBoardComponent and the UserComponent are example on how to use the different services.\nUseful command\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nFeel free to use, reuse, extend, and contribute\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCGDmHp1RN511loQgxeSeeeBeFaWek-pIc',\n    authDomain: 'loginang-7034e.firebaseapp.com',\n    databaseURL: 'https://loginang-7034e.firebaseio.com',\n    projectId: 'loginang-7034e',\n    storageBucket: 'loginang-7034e.appspot.com',\n    messagingSenderId: '528303106160'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
